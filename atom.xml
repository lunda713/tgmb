<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Akilarの糖果屋</title>
  
  <subtitle>Akilar.top</subtitle>
  <link href="https://akilar.top/atom.xml" rel="self"/>
  
  <link href="https://akilar.top/"/>
  <updated>2021-01-15T18:39:04.980Z</updated>
  <id>https://akilar.top/</id>
  
  <author>
    <name>Akilar</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>给博客添加live2d看板娘</title>
    <link href="https://akilar.top/posts/5b8f515f/"/>
    <id>https://akilar.top/posts/5b8f515f/</id>
    <published>2021-01-14T14:10:43.000Z</published>
    <updated>2021-01-15T18:39:04.980Z</updated>
    
    <content type="html"><![CDATA[<details cyan><summary> 点击查看更新记录 </summary>              <div class='content'>              <div class="timeline"><p class='p h2'>更新记录</p><div class="timenode"><div class="meta"><p><p>2020-08-12:内测版v0.01</p></p></div><div class="body"><ol><li>编写插件方案和大神方案的配置教程。</li></ol></div></div><div class="timenode"><div class="meta"><p><p>2020-09-16:内测版v0.02</p></p></div><div class="body"><ol><li>尝试使用本地化API方案。</li></ol></div></div><div class="timenode"><div class="meta"><p><p>2021-01-14:内测版v1.0</p></p></div><div class="body"><ol><li>重构教程</li><li>重新配置后端API仓库内的模型组装方式</li><li>项目实现去jquery和本地化API（本就可以）</li></ol></div></div></div>              </div>            </details><details yellow><summary> 点击查看参考教程 </summary>              <div class='content'>              <div class="table-container"><table><thead><tr><th style="text-align:left">参考方向</th><th style="text-align:left">教程原贴</th></tr></thead><tbody><tr><td style="text-align:left">插件方案项目</td><td style="text-align:left"><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/EYHN/hexo-helper-live2d"><img src= "https://cdn.jsdelivr.net/gh/Akilarlxh/akilarlxh.github.io@v2.1/img/loading.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?username=EYHN&repo=hexo-helper-live2d&show_owner=true"/></a></td></tr><tr><td style="text-align:left">插件方案可用模型</td><td style="text-align:left"><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/xiazeyu/live2d-widget-models"><img src= "https://cdn.jsdelivr.net/gh/Akilarlxh/akilarlxh.github.io@v2.1/img/loading.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?username=xiazeyu&repo=live2d-widget-models&show_owner=true"/></a></td></tr><tr><td style="text-align:left">插件方案模型预览</td><td style="text-align:left"><a href="https://huaji8.top/post/live2d-plugin-2.0/">模型预览</a></td></tr><tr><td style="text-align:left">原版可换装看板娘项目</td><td style="text-align:left"><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fghrsh/live2d_demo"><img src= "https://cdn.jsdelivr.net/gh/Akilarlxh/akilarlxh.github.io@v2.1/img/loading.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?username=fghrsh&repo=live2d_demo&show_owner=true"/></a></td></tr><tr><td style="text-align:left">张书樵大神魔改项目</td><td style="text-align:left"><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/stevenjoezhang/live2d-widget"><img src= "https://cdn.jsdelivr.net/gh/Akilarlxh/akilarlxh.github.io@v2.1/img/loading.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?username=stevenjoezhang&repo=live2d-widget&show_owner=true"/></a></td></tr><tr><td style="text-align:left">原版后端API源码</td><td style="text-align:left"><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fghrsh/live2d_api"><img src= "https://cdn.jsdelivr.net/gh/Akilarlxh/akilarlxh.github.io@v2.1/img/loading.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?username=fghrsh&repo=live2d_api&show_owner=true"/></a></td></tr><tr><td style="text-align:left">本地化API版本</td><td style="text-align:left"><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/panedioic/live2d_demo_without_api"><img src= "https://cdn.jsdelivr.net/gh/Akilarlxh/akilarlxh.github.io@v2.1/img/loading.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?username=panedioic&repo=live2d_demo_without_api&show_owner=true"/></a></td></tr><tr><td style="text-align:left">模型组装后端API源码</td><td style="text-align:left"><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fghrsh/live2d_api"><img src= "https://cdn.jsdelivr.net/gh/Akilarlxh/akilarlxh.github.io@v2.1/img/loading.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?username=fghrsh&repo=live2d_api&show_owner=true"/></a></td></tr><tr><td style="text-align:left">海量模型收集</td><td style="text-align:left"><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/Eikanya/Live2d-model"><img src= "https://cdn.jsdelivr.net/gh/Akilarlxh/akilarlxh.github.io@v2.1/img/loading.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?username=Eikanya&repo=Live2d-model&show_owner=true"/></a></td></tr><tr><td style="text-align:left">live_2d模型资源站</td><td style="text-align:left"><a href="https://mx.paul.ren/">梦象，一个专注于 Live2D 模型的资源站</a></td></tr><tr><td style="text-align:left">梦象提供的模型的安装教程</td><td style="text-align:left"><a href="https://mx.paul.ren/course/how-to-use-models.html">如何在网站上使用梦象上的模型</a></td></tr></tbody></table></div>              </div>            </details><h1 id="写在最前"><a href="#写在最前" class="headerlink" title="写在最前"></a>写在最前</h1><p>最早的时候看别人的博客很多都有一个可爱的看板娘，然后就找了教程给自己也整了一个。因为找到的教程都是稂莠不齐的，原作者自己说的也略显含糊（其实是我自己看不懂）。总之秉承着一如既往的小白风格。把网上的教程做个整合。</p><h1 id="Hexo插件版看板娘（不能换装）"><a href="#Hexo插件版看板娘（不能换装）" class="headerlink" title="Hexo插件版看板娘（不能换装）"></a>Hexo插件版看板娘（不能换装）</h1><details red><summary> 点击查看插件化配置方案 </summary>              <div class='content'>              <p>首先是博客自带的看板娘，这孩子不会说话也不能换装，只会跟着你的鼠标晃动脑袋，不过有几款超可爱。可以在这里查看部分模型的预览图：<a href="https://huaji8.top/post/live2d-plugin-2.0/">模型预览</a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ol><li>在Hexo根目录<code>[Blogroot]</code>下打开终端，输入以下指令安装必要插件。<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-helper-live2d</span><br></pre></td></tr></table></figure></li><li>打开站点配置文件<code>[Blogroot]\config.yml</code><br>搜索live2d,按照如下注释内容指示进行操作。<br>如果没有搜到live2d的配置项，就直接把以下内容复制到最底部。<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Live2D</span></span><br><span class="line"><span class="comment">## https://github.com/EYHN/hexo-helper-live2d</span></span><br><span class="line"><span class="attr">live2d:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment">#开关插件版看板娘</span></span><br><span class="line">  <span class="attr">scriptFrom:</span> <span class="string">local</span> <span class="comment"># 默认</span></span><br><span class="line">  <span class="attr">pluginRootPath:</span> <span class="string">live2dw/</span> <span class="comment"># 插件在站点上的根目录(相对路径)</span></span><br><span class="line">  <span class="attr">pluginJsPath:</span> <span class="string">lib/</span> <span class="comment"># 脚本文件相对与插件根目录路径</span></span><br><span class="line">  <span class="attr">pluginModelPath:</span> <span class="string">assets/</span> <span class="comment"># 模型文件相对与插件根目录路径</span></span><br><span class="line">  <span class="comment"># scriptFrom: jsdelivr # jsdelivr CDN</span></span><br><span class="line">  <span class="comment"># scriptFrom: unpkg # unpkg CDN</span></span><br><span class="line">  <span class="comment"># scriptFrom: https://cdn.jsdelivr.net/npm/live2d-widget@3.x/lib/L2Dwidget.min.js # 你的自定义 url</span></span><br><span class="line">  <span class="attr">tagMode:</span> <span class="literal">false</span> <span class="comment"># 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中</span></span><br><span class="line">  <span class="attr">debug:</span> <span class="literal">false</span> <span class="comment"># 调试, 是否在控制台输出日志</span></span><br><span class="line">  <span class="attr">model:</span></span><br><span class="line">    <span class="attr">use:</span> <span class="string">live2d-widget-model-wanko</span> <span class="comment"># npm-module package name</span></span><br><span class="line">    <span class="comment"># use: wanko # 博客根目录/live2d_models/ 下的目录名</span></span><br><span class="line">    <span class="comment"># use: ./wives/wanko # 相对于博客根目录的路径</span></span><br><span class="line">    <span class="comment"># use: https://cdn.jsdelivr.net/npm/live2d-widget-model-wanko@1.0.5/assets/wanko.model.json # 你的自定义 url</span></span><br><span class="line">  <span class="attr">display:</span></span><br><span class="line">    <span class="attr">position:</span> <span class="string">right</span> <span class="comment">#控制看板娘位置</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">150</span> <span class="comment">#控制看板娘大小</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">300</span> <span class="comment">#控制看板娘大小</span></span><br><span class="line">  <span class="attr">mobile:</span></span><br><span class="line">    <span class="attr">show:</span> <span class="literal">true</span> <span class="comment"># 手机中是否展示</span></span><br></pre></td></tr></table></figure></li><li>完成后保存修改，在Hexo根目录下运行指令<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>之所以必须要使用hexo clean是因为我们需要清空缓存重新生成静态页面，不然看板娘没被加入生成的静态页面里，是不会出现的。</li></ol><h2 id="更换看板娘"><a href="#更换看板娘" class="headerlink" title="更换看板娘"></a>更换看板娘</h2><ol><li>同样是在Hexo根目录<code>[Blogroot]</code>下，打开终端，选择想要的看板娘进行安装，例如我这里用到的是 <code>live2d-widget-model-koharu</code>，一个Q版小正太。其他的模型也可以在<a href="https://huaji8.top/post/live2d-plugin-2.0/">模型预览</a>里查看以供选择。</li><li>输入指令<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install --save live2d-widget-model-koharu</span><br></pre></td></tr></table></figure></li><li>然后在站点配置文件<code>[Blogroot]\_config.yml</code>里找到<code>model</code>项修改为期望的模型。<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">model:</span></span><br><span class="line">  <span class="attr">use:</span> <span class="string">live2d-widget-model-koharu</span></span><br><span class="line">  <span class="comment"># 默认为live2d-widget-model-wanko</span></span><br></pre></td></tr></table></figure></li><li>之后按部就班的运行<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>就能在<code>localhost:4000</code>上查看效果了。</li></ol><h2 id="卸载看板娘"><a href="#卸载看板娘" class="headerlink" title="卸载看板娘"></a>卸载看板娘</h2><p>卸载插件和卸载模型的指令都是通过npm进行操作的。在博客根目录<code>[Blogroot]</code>打开终端，输入：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm uninstall hexo-helper-live2d <span class="comment">#卸载看板娘插件</span></span><br><span class="line">npm uninstall live2d-widget-model-modelname <span class="comment">#卸载看板娘模型。记得替换modelname为看板娘名称</span></span><br></pre></td></tr></table></figure><br>卸载后为了保证配置项不出错，记得把<code>[Blogroot]\_config.yml</code>里的配置项给注释或者删除掉。</p>              </div>            </details><h1 id="大神魔改看板娘（会说话，能换装）"><a href="#大神魔改看板娘（会说话，能换装）" class="headerlink" title="大神魔改看板娘（会说话，能换装）"></a>大神魔改看板娘（会说话，能换装）</h1><details purple open><summary> 点击查看大神版本 </summary>              <div class='content'>              <div class="note info flat"><div class="hide-block"><button type="button" class="hide-button button--animated" style="">预览效果    </button><div class="hide-content"><p><img src= "https://cdn.jsdelivr.net/gh/Akilarlxh/akilarlxh.github.io@v2.1/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/pangao1990/pangao1990.github.io/pic/Hexo%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E4%B9%8B%E6%96%B0%E5%A2%9E%E7%9C%8B%E6%9D%BF%E5%A8%98-1.gif" alt=""></p></div></div></div><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><div class="tabs" id="看板娘配置"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#看板娘配置-1">💫next主题</button></li><li class="tab"><button type="button" data-href="#看板娘配置-2">🦋Butterfly主题</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="看板娘配置-1"><ol><li>在<code>NexT</code>主题的<code>source</code>目录下<code>[Blogroot]\themes\next\source\</code>打开终端,输入<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/stevenjoezhang/live2d-widget.git live2d-widget</span><br></pre></td></tr></table></figure><div class="note info morden flat"><p>这行指令的意思就是<code>clone</code>这个项目到<code>source</code>路径下并重命名为<code>live2d-widget</code>。<del>emm，貌似本来就叫live2d-widget。反正算是一个踩坑点。</del>如果是用下载项目压缩包，解压后放到这里的，也记得把文件夹<code>更名为live2d-widge</code>t。</p></div></li><li>找到路径<code>[Blogroot]\themes\next\source\live2d-widget\autoload.js</code>，打开<code>autoload.js</code>，<figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"><span class="deletion">- const live2d_path = &quot;https://cdn.jsdelivr.net/gh/stevenjoezhang/live2d-widget/&quot;;</span></span><br><span class="line"><span class="addition">+ const live2d_path = &quot;/live2d-widget/&quot;;</span></span><br></pre></td></tr></table></figure><div class="note info morden flat"><p>此处引用一下参考教程原话：<code>autoload.js</code>中的注释的绝对地址指的是，将资源打包放到<code>[Blogroot]/theme/next/source</code>中后，以<code>[Blogroot]/theme/next/source</code>为根目录（/）的绝对路径。</p></div></li><li><p>在/themes/next/layout/_layout.swing中,在<code>&lt;head&gt;</code>标签中添加如下内容以增加<code>font-awesome</code>依赖。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/font-awesome/css/font-awesome.min.css&quot;</span>/ <span class="attr">media</span>=<span class="string">&quot;defer&quot;</span> <span class="attr">onload</span>=<span class="string">&quot;this.media=&#x27;all&#x27;&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/Akilarlxh/akilarlxh.github.io@v2.1/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Akilarlxh/Picgo@v2.3/tencent/%E7%BB%99%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E4%B8%80%E4%B8%AA%E4%BC%9A%E8%AF%B4%E8%AF%9D%E8%83%BD%E6%8D%A2%E8%A3%85%E7%9A%84live2d%E7%9C%8B%E6%9D%BF%E5%A8%98/20200812030316962.png" alt=""></p><p>在<code>&lt;body&gt;</code>标签中新增如下内容，</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">defer</span> <span class="attr">src</span>=<span class="string">&quot;/live2d-widget/autoload.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/Akilarlxh/akilarlxh.github.io@v2.1/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Akilarlxh/Picgo@v2.3/tencent/%E7%BB%99%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E4%B8%80%E4%B8%AA%E4%BC%9A%E8%AF%B4%E8%AF%9D%E8%83%BD%E6%8D%A2%E8%A3%85%E7%9A%84live2d%E7%9C%8B%E6%9D%BF%E5%A8%98/20200812025853981.png" alt=""></p></li><li>在主题配置文件<code>[Blogroot]/themes/next/_config.yml</code>底部添加如下内容<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">live2d:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>保存所有文件的修改，然后照例执行<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>就能在<code>localhost:4000</code>看到预览了。</li><li>自定义修改<br>有一定前端基础的小伙伴可以通过修改<code>[Blogroot]\themes\next\source\live2d-widget</code>路径下的<ul><li><code>waifu-tips.js</code>:包含了按钮和对话框的逻辑</li><li><code>waifu-tips.json</code> :定义了触发条件（selector，CSS 选择器）和触发时显示的文字（text）；</li><li><code>waifu.css</code>:看板娘的样式表。可以对看板娘的位置布局等做自定义修改。</li></ul></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="看板娘配置-2"><ol><li>以<code>Butterfly</code>主题为例，在<code>[Blogroot]\themes\butterfly\source\</code>目录下打开终端,输入 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/stevenjoezhang/live2d-widget.git live2d-widget</span><br></pre></td></tr></table></figure> <div class="note info morden flat"><p>这行指令的意思就是<code>clone</code>这个项目到<code>source</code>路径下并重命名为<code>live2d-widget</code>。<del>emm，貌似本来就叫live2d-widget。反正算是一个踩坑点。</del>如果是用下载项目压缩包，解压后放到这里的，也记得把文件夹<code>更名为live2d-widge</code>t。</p></div></li><li><p>找到路径<code>[Blogroot]\themes\butterfly\source\live2d-widget\autoload.js</code>，打开<code>autoload.js</code>，修改内容：</p><figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"><span class="deletion">- const live2d_path = &quot;https://cdn.jsdelivr.net/gh/stevenjoezhang/live2d-widget/&quot;;</span></span><br><span class="line"><span class="addition">+ const live2d_path = &quot;/live2d-widget/&quot;;</span></span><br></pre></td></tr></table></figure><div class="note info morden flat"><p>此处引用一下参考教程原话：<code>autoload.js</code>中的注释的绝对地址指的是，将资源打包放到<code>[Blogroot]/theme/next/source</code>中后，以<code>[Blogroot]/theme/next/source</code>为根目录（/）的绝对路径。</p></div></li><li><p>在<code>Butterfly</code>的主题配置文件<code>[Blogroot]\_config.butterfly.yml</code>中,<br> <code>butterfly</code>主题其实自带<code>fontawesome</code>依赖，无需引入，</p><figure class="highlight diff"><table><tr><td class="code"><pre><span class="line">    # Inject</span><br><span class="line">    # Insert the code to head (before &#x27;&lt;/head&gt;&#x27; tag) and the bottom (before &#x27;&lt;/body&gt;&#x27; tag)</span><br><span class="line">    # 插入代码到头部 &lt;/head&gt; 之前 和 底部 &lt;/body&gt; 之前</span><br><span class="line">    inject:</span><br><span class="line">      head:</span><br><span class="line">        # - &lt;link rel=&quot;stylesheet&quot; href=&quot;/xxx.css&quot;&gt;</span><br><span class="line">      bottom:</span><br><span class="line">        # - &lt;script src=&quot;xxxx&quot;&gt;&lt;/script&gt;</span><br><span class="line"><span class="addition">+       - &lt;script defer src=&quot;/live2d-widget/autoload.js&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>保存所有文件的修改，然后照例执行</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>就能在<code>localhost:4000</code>看到预览了。</p></li><li><p>自定义修改<br>有一定前端基础的小伙伴可以通过修改<code>[Blogroot]\themes\butterfly\source\live2d-widget</code>路径下的样式资源文件：</p><ul><li><code>waifu-tips.js</code>:包含了按钮和对话框的逻辑</li><li><code>waifu-tips.json</code> :定义了触发条件（selector，CSS 选择器）和触发时显示的文字（text）；</li><li><code>waifu.css</code>:看板娘的样式表。可以对看板娘的位置布局等做自定义修改。</li></ul></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>              </div>            </details><h1 id="bug归纳"><a href="#bug归纳" class="headerlink" title="bug归纳"></a>bug归纳</h1><div class="note danger morden flat"><p>在配置了<code>gulp</code>和<code>pwa</code>之后，看板娘消失。这个是<code>gulp-babel</code>压缩导致的。</p></div><p>一开始博主通过在<code>gulpfile.js</code>里添加屏蔽配置，让<code>gulp</code>不要压缩看板娘的静态资源，但是似乎是因为<code>pwa</code>的缘故，在本地预览重新出现的看板娘在部署到网页以后依然不出现。<br><div class="note success morden flat"><p>解决方案：</p><ol><li>直接把看板娘提取出来作为单独的项目，然后借助jsdelivr引用相应的静态资源。<code>live2d-widget</code>文件夹不放在博客的<code>source</code>目录中，而是存在独立的<code>github</code>仓库里。这样<code>gulp</code>怎么也压缩不到。而且得益于<code>jsdelivr</code>，看板娘的加载速度也有所提高。</li><li>配置方法是将<a href="https://github.com/stevenjoezhang/live2d-widget">live2d-widget</a>项目fork到自己的仓库（用原项目也可以，但是那样不方便更改样式啊），然后修改<code>autoload.js</code>里的路径为你自己的仓库名。<figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"><span class="deletion">- const live2d_path = &quot;https://cdn.jsdelivr.net/gh/stevenjoezhang/live2d-widget/&quot;;</span></span><br><span class="line"><span class="addition">+ const live2d_path = &quot;https://cdn.jsdelivr.net/gh/YourGithubName/live2d-widget/&quot;;</span></span><br></pre></td></tr></table></figure></li><li>在主题配置项里也可以使用<code>https://cdn.jsdelivr.net/gh/YourGithubName/live2d-widget/autoload.js</code>来引入。</li></ol></div></p><h1 id="本地化API配置"><a href="#本地化API配置" class="headerlink" title="本地化API配置"></a>本地化API配置</h1><div class="note warning morden flat"><p>有读者反映使用张书樵大神的魔改方案时，<code>Pio酱</code>和<code>Tia酱</code>的模型不能像在其他网站看到的那样可以换装。这里主要是因为张书樵大神的魔改方案使用的CDN路径是通过接入的<a href="https://github.com/fghrsh/live2d_api">live2d_api仓库</a>的<code>jedelivrCDN</code>链接，根据该项目的<code>model_list.json</code>和指向的<code>model</code>文件夹内的模型的<code>index.json</code>来确定模型资源。而<code>Pio酱</code>和<code>Tia酱</code>的模型装配是配合有后端服务器的API装配方式，依赖于后端生成的<code>textures.cache</code>来获取模型资源。解决方案是将模型装配模式由<code>单模型 多组皮肤</code>转换为<code>同分组 多个模型</code>。</p></div><ol><li><p>懒人配置方案:修改张书樵大神的项目内的<code>~\live2d-widget\autoload.js</code>,将模型资源由<code>cdnPath</code>改为<code>apiPath</code>。</p><figure class="highlight diff"><table><tr><td class="code"><pre><span class="line">  // 加载 waifu.css live2d.min.js waifu-tips.js</span><br><span class="line">  if (screen.width &gt;= 768) &#123;</span><br><span class="line">  Promise.all([</span><br><span class="line">  loadExternalResource(live2d_path + &quot;waifu.css&quot;, &quot;css&quot;),</span><br><span class="line">  loadExternalResource(live2d_path + &quot;live2d.min.js&quot;, &quot;js&quot;),</span><br><span class="line">  loadExternalResource(live2d_path + &quot;waifu-tips.js&quot;, &quot;js&quot;)</span><br><span class="line">  ]).then(() =&gt; &#123;</span><br><span class="line">  initWidget(&#123;</span><br><span class="line">  waifuPath: live2d_path + &quot;waifu-tips.json&quot;,</span><br><span class="line"><span class="deletion">- //apiPath: &quot;https://live2d.fghrsh.net/api/&quot;,</span></span><br><span class="line"><span class="deletion">-  cdnPath: &quot;https://cdn.jsdelivr.net/gh/fghrsh/live2d_api/&quot;</span></span><br><span class="line"><span class="addition">+ apiPath: &quot;https://live2d.fghrsh.net/api/&quot;,</span></span><br><span class="line"><span class="addition">+  //cdnPath: &quot;https://cdn.jsdelivr.net/gh/fghrsh/live2d_api/&quot;</span></span><br><span class="line">  &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><div class="note warning morden flat"><p>这个apiPath就是live2d_widget的原作者<a href="https://www.fghrsh.net/post/123.html">@fghrsh</a>搭建的。但是这个API纯粹是用爱发电的产物，随时可能到期，虽然已经喊了三年了。。。详见<a href="https://www.fghrsh.net/post/170.html">Live2D 看板娘 API 迁移公告</a>，所以最好还是采用<a href="https://github.com/fghrsh/live2d_api">自建api</a>的方式。</p></div></li><li><p>模型配置方案更改<br>上面已经说到过，张书樵大神的魔改方案其实已经实现了<code>本地化API</code>，只是因为模型配置路径不同才导致无法换装的。所以其实只要注意配置模型时，保证每个可以展示的模型都有相应的<code>index.json</code>并且在<code>model_list.json</code>里有相应的模型路径就可以了。<br>这里可以比对参考我改好的路径项目和原项目的区别</p><ul><li><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fghrsh/live2d_api"><img src= "https://cdn.jsdelivr.net/gh/Akilarlxh/akilarlxh.github.io@v2.1/img/loading.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?username=fghrsh&repo=live2d_api&show_owner=true"/></a></li><li><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/Akilarlxh/live2d_api"><img src= "https://cdn.jsdelivr.net/gh/Akilarlxh/akilarlxh.github.io@v2.1/img/loading.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?username=Akilarlxh&repo=live2d_api&show_owner=true"/></a></li></ul><p>这里读者可以直接使用我配置好的本地化项目的路径：<br>修改张书樵大神的项目内的<code>~\live2d-widget\autoload.js</code>,修改<code>cdaPath</code></p><figure class="highlight diff"><table><tr><td class="code"><pre><span class="line">  // 加载 waifu.css live2d.min.js waifu-tips.js</span><br><span class="line">  if (screen.width &gt;= 768) &#123;</span><br><span class="line">  Promise.all([</span><br><span class="line">  loadExternalResource(live2d_path + &quot;waifu.css&quot;, &quot;css&quot;),</span><br><span class="line">  loadExternalResource(live2d_path + &quot;live2d.min.js&quot;, &quot;js&quot;),</span><br><span class="line">  loadExternalResource(live2d_path + &quot;waifu-tips.js&quot;, &quot;js&quot;)</span><br><span class="line">  ]).then(() =&gt; &#123;</span><br><span class="line">  initWidget(&#123;</span><br><span class="line">  waifuPath: live2d_path + &quot;waifu-tips.json&quot;,</span><br><span class="line">  //apiPath: &quot;https://live2d.fghrsh.net/api/&quot;,</span><br><span class="line"><span class="deletion">-  cdnPath: &quot;https://cdn.jsdelivr.net/gh/fghrsh/live2d_api/&quot;</span></span><br><span class="line"><span class="addition">+  cdnPath: &quot;https://live2d-api.vercel.app/&quot;</span></span><br><span class="line">//因为jsdelivr不支持50MB以上的包的加速，可能报403错误，所以用的vercel的CDN服务。</span><br><span class="line">//可以考虑clone我配置好的live2d_api仓库自己部署到其他更快的cdn服务上。</span><br><span class="line">  &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>除了让原有模型换装可用化以为，还顺便添加了<code>和泉纱雾</code>，<code>血小板</code>和<code>香风智乃</code>的模型哦。</p></li></ol>]]></content>
    
    
    <summary type="html">给你的博客添加一个可爱的看板娘~更新了换装教程</summary>
    
    
    
    <category term="🍡Akilarの糖葫芦" scheme="https://akilar.top/categories/%F0%9F%8D%A1Akilar%E3%81%AE%E7%B3%96%E8%91%AB%E8%8A%A6/"/>
    
    
    <category term="📁Hexo" scheme="https://akilar.top/tags/%F0%9F%93%81Hexo/"/>
    
    <category term="💃看板娘" scheme="https://akilar.top/tags/%F0%9F%92%83%E7%9C%8B%E6%9D%BF%E5%A8%98/"/>
    
    <category term="🧚‍♀️live2d" scheme="https://akilar.top/tags/%F0%9F%A7%9A%E2%80%8D%E2%99%80%EF%B8%8Flive2d/"/>
    
  </entry>
  
  <entry>
    <title>给博客元素添加浮动特效</title>
    <link href="https://akilar.top/posts/9e3bccc6/"/>
    <id>https://akilar.top/posts/9e3bccc6/</id>
    <published>2021-01-10T10:27:40.000Z</published>
    <updated>2021-01-15T18:39:04.980Z</updated>
    
    <content type="html"><![CDATA[<style>.paneldemo {height: 100pxmargin: 0;overflow: hidden;}.paneldemo {color: white;font-family: sans-serif;font-size: 1.8em;display: flex;align-items: center;justify-content: center;}.panelcontent {margin: 1px;width: 140px;height: 140px;display: flex;align-items: center;justify-content: center;box-shadow: 0px 0px 10px rgba(0,0,0,0.3);transition: all 0.4s cubic-bezier(0.39, 0.575, 0.565, 1);}</style><details cyan><summary> 点击查看更新记录 </summary>              <div class='content'>              <div class="timeline"><p class='p h2'>更新记录</p><div class="timenode"><div class="meta"><p><p>2021-01-10:正式版v1.0</p></p></div><div class="body"><ol><li>参考原项目进行修改。简化样式添加流程。</li><li>配合配置项批量添加特效类。</li></ol></div></div></div>              </div>            </details><details yellow><summary> 点击查看参考教程 </summary>              <div class='content'>              <div class="table-container"><table><thead><tr><th style="text-align:left">参考方向</th><th style="text-align:left">教程原贴</th></tr></thead><tbody><tr><td style="text-align:left">参考动画添加原理</td><td style="text-align:left"><a href="https://codepen.io/orangexc/pen/VmgoVX/">codepen-floatavatar</a></td></tr><tr><td style="text-align:left">源项目，在此基础上改动了批量添加方式，移除需要父元素的设定</td><td style="text-align:left"><a href="https://codepen.io/PavelDoGreat/pen/aBPRaX/">codepen-wowpanels</a></td></tr></tbody></table></div>              </div>            </details><h1 id="写在最前"><a href="#写在最前" class="headerlink" title="写在最前"></a>写在最前</h1><p><a href="https://blog.zhheo.com/">洪哥</a>推荐的一个小玩具项目，捣鼓了一下，发现和<code>wowjs</code>的配置方式差不多，就直接沿用那篇教程的写法来添加特效了。本文内容很简短。如果想要更高级的玩法，例如使用配置项来添加，可以仿照站内教程<a href="/posts/abab51cf/">使用wowjs给博客添加动画效果</a>。<br><div class="hide-block"><button type="button" class="hide-button button--animated" style="">预览效果    </button><div class="hide-content"><div class="paneldemo"><div class="wowpanel">    <div class="panelcontent">move</div></div><div class="wowpanel">    <div class="panelcontent">your</div></div><div class="wowpanel">    <div class="panelcontent">cursor</div></div><div class="wowpanel">    <div class="panelcontent">over</div></div></div><div class="pjax-reload"><script>var ANGLE = 45;var wowpanels = document.querySelectorAll(".wowpanel");var colors = ['#4975FB', '#924DE6', '#EF5252', '#F59500'];wowpanels.forEach((element, i) => {    floatable(element, colors[i]);});function floatable (panel, color) {    var content = panel.querySelector(".panelcontent");    content.style.backgroundColor = color;    panel.addEventListener('mouseout', e => {        content.style.transform = `perspective(300px)                                   rotateX(0deg)                                   rotateY(0deg)                                   rotateZ(0deg)`;    });    panel.addEventListener('mousemove', e => {        var w = panel.clientWidth;        var h = panel.clientHeight;        var y = (e.offsetX - w * 0.5) / w * ANGLE;        var x = (1 - (e.offsetY - h * 0.5)) / h * ANGLE;        content.style.transform = `perspective(300px)                                   rotateX(${x}deg)                                   rotateY(${y}deg)`;    });}</script></div></div></div></p><h1 id="基础引入方案（通用）"><a href="#基础引入方案（通用）" class="headerlink" title="基础引入方案（通用）"></a>基础引入方案（通用）</h1><ol><li>新建<code>[Blogroot]\themes\butterfly\source\js\floatpanel.js</code>,<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> ANGLE = <span class="number">45</span>; <span class="comment">//控制浮动角度，数值越大，浮动幅度越大。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> panel= <span class="built_in">document</span>.getElementsByClassName(<span class="string">&#x27;wowpanels&#x27;</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i&lt;panel.length;i++)&#123;</span><br><span class="line">floatable(panel[i]);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">floatable</span> (<span class="params">content</span>) </span>&#123;</span><br><span class="line">content.addEventListener(<span class="string">&#x27;mouseout&#x27;</span>, <span class="function"><span class="params">e</span> =&gt;</span> &#123;</span><br><span class="line">content.style.transform = <span class="string">`perspective(300px)</span></span><br><span class="line"><span class="string">   rotateX(0deg)</span></span><br><span class="line"><span class="string">   rotateY(0deg)</span></span><br><span class="line"><span class="string">   rotateZ(0deg)`</span>;</span><br><span class="line">&#125;);</span><br><span class="line">content.addEventListener(<span class="string">&#x27;mousemove&#x27;</span>, <span class="function"><span class="params">e</span> =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">var</span> w = content.clientWidth;</span><br><span class="line"><span class="keyword">var</span> h = content.clientHeight;</span><br><span class="line"><span class="keyword">var</span> y = (e.offsetX - w * <span class="number">0.5</span>) / w * ANGLE;</span><br><span class="line"><span class="keyword">var</span> x = (<span class="number">1</span> - (e.offsetY - h * <span class="number">0.5</span>)) / h * ANGLE;</span><br><span class="line"></span><br><span class="line">content.style.transform = <span class="string">`perspective(300px)</span></span><br><span class="line"><span class="string">   rotateX(<span class="subst">$&#123;x&#125;</span>deg)</span></span><br><span class="line"><span class="string">   rotateY(<span class="subst">$&#123;y&#125;</span>deg)`</span>;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>修改<code>[Blogroot]\_config.butterfly.yml</code>,添加引入项：<figure class="highlight diff"><table><tr><td class="code"><pre><span class="line">  inject:</span><br><span class="line">    head:</span><br><span class="line">    bottom:</span><br><span class="line"><span class="addition">+     - &lt;script async data-pjax src=&quot;/js/custom/floatpanel.js&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure></li><li>给你想要添加特效的元素添加<code>wowpanels</code>类。在步骤1的<code>floatpanel.js</code><strong>上方</strong>添加：<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 新增的内容</span></span><br><span class="line"><span class="keyword">var</span> arr = <span class="built_in">document</span>.getElementsByClassName(<span class="string">&#x27;element-class&#x27;</span>);</span><br><span class="line"><span class="comment">//把element-class替换成你想要添加特效的元素的类名</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i&lt;arr.length;i++)&#123;</span><br><span class="line">    arr[i].classList.add(<span class="string">&#x27;wowpanels&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="comment">// 原来的内容</span></span><br><span class="line"><span class="keyword">var</span> ANGLE = <span class="number">45</span>; <span class="comment">//控制浮动角度，数值越大，浮动幅度越大。</span></span><br><span class="line"><span class="keyword">var</span> panel= <span class="built_in">document</span>.getElementsByClassName(<span class="string">&#x27;wowpanels&#x27;</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i&lt;panel.length;i++)&#123;</span><br><span class="line">  floatable(panel[i]);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">floatable</span> (<span class="params">content</span>) </span>&#123;</span><br><span class="line">  content.addEventListener(<span class="string">&#x27;mouseout&#x27;</span>, <span class="function"><span class="params">e</span> =&gt;</span> &#123;</span><br><span class="line">    content.style.transform = <span class="string">`perspective(300px)</span></span><br><span class="line"><span class="string">                   rotateX(0deg)</span></span><br><span class="line"><span class="string">                   rotateY(0deg)</span></span><br><span class="line"><span class="string">                   rotateZ(0deg)`</span>;</span><br><span class="line">  &#125;);</span><br><span class="line">  content.addEventListener(<span class="string">&#x27;mousemove&#x27;</span>, <span class="function"><span class="params">e</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> w = content.clientWidth;</span><br><span class="line">    <span class="keyword">var</span> h = content.clientHeight;</span><br><span class="line">    <span class="keyword">var</span> y = (e.offsetX - w * <span class="number">0.5</span>) / w * ANGLE;</span><br><span class="line">    <span class="keyword">var</span> x = (<span class="number">1</span> - (e.offsetY - h * <span class="number">0.5</span>)) / h * ANGLE;</span><br><span class="line"></span><br><span class="line">    content.style.transform = <span class="string">`perspective(300px)</span></span><br><span class="line"><span class="string">                   rotateX(<span class="subst">$&#123;x&#125;</span>deg)</span></span><br><span class="line"><span class="string">                   rotateY(<span class="subst">$&#123;y&#125;</span>deg)`</span>;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>拓展内容：事实上，如果你已经完成过<a href="/posts/abab51cf/">wowjs的插件化配置教程</a>，直接将<code>wowpanels</code>视为一种动画样式，<strong>在完成了本帖教程的1、2两个步骤以后</strong>，使用<a href="/posts/abab51cf/">那边</a>的配置方案来添加<code>wowpanels</code>样式即可。例如给友链卡片添加浮动动画：<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">wowjs:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment">#控制动画开关。true是打开，false是关闭</span></span><br><span class="line">  <span class="attr">animateitem:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">class:</span> <span class="string">site-card</span></span><br><span class="line">      <span class="attr">style:</span> <span class="string">wowpanels</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <summary type="html">给页面元素添加浮动特效</summary>
    
    
    
    <category term="🍡Akilarの糖葫芦" scheme="https://akilar.top/categories/%F0%9F%8D%A1Akilar%E3%81%AE%E7%B3%96%E8%91%AB%E8%8A%A6/"/>
    
    
    <category term="📁Hexo" scheme="https://akilar.top/tags/%F0%9F%93%81Hexo/"/>
    
    <category term="🦋Butterfly" scheme="https://akilar.top/tags/%F0%9F%A6%8BButterfly/"/>
    
  </entry>
  
  <entry>
    <title>基于swiper的首页置顶轮播图</title>
    <link href="https://akilar.top/posts/8e1264d1/"/>
    <id>https://akilar.top/posts/8e1264d1/</id>
    <published>2020-12-29T14:36:26.000Z</published>
    <updated>2021-01-15T18:39:04.980Z</updated>
    
    <content type="html"><![CDATA[<details cyan><summary> 点击查看更新记录 </summary>              <div class='content'>              <div class="timeline"><p class='p h2'>更新记录</p><div class="timenode"><div class="meta"><p><p>2020-12-29:正式版v1.1</p></p></div><div class="body"><ol><li>基于冰老师的轮播方案进行修改</li><li>修改了样式，转为styl</li><li>去jquery（貌似本来就不依赖jquery）</li><li>依赖项改为CDN链接</li><li>适配pjax</li><li>使用循环节配合data.slider来添加新制定信息</li></ol></div></div></div>              </div>            </details><details yellow><summary> 点击查看参考教程 </summary>              <div class='content'>              <div class="table-container"><table><thead><tr><th style="text-align:left">参考方向</th><th style="text-align:left">教程原贴</th></tr></thead><tbody><tr><td style="text-align:left">Codepen源项目</td><td style="text-align:left"><a href="https://codepen.io/JavaScriptJunkie/pen/WgRBxw">Responsive Blog Card Slider</a></td></tr><tr><td style="text-align:left">沿用冰老师对上述项目重构的样式</td><td style="text-align:left"><a href="https://zfe.space/post/11009.html">教程：基于Butterfly主题的轮播手动置顶文章</a></td></tr><tr><td style="text-align:left">swiper初始化参数配置</td><td style="text-align:left"><a href="https://www.swiper.com.cn/">Swiper官方文档</a></td></tr></tbody></table></div>              </div>            </details><h1 id="写在最前"><a href="#写在最前" class="headerlink" title="写在最前"></a>写在最前</h1><p>本项目是对冰卡诺老师写的<a href="https://zfe.space/post/11009.html">教程：基于Butterfly主题的轮播手动置顶文章</a>进行重构，精简了部分样式。适配pjax。</p><h1 id="资源下载"><a href="#资源下载" class="headerlink" title="资源下载"></a>资源下载</h1><div class="tip cogs faa-horizontal animated"><p><strong>由于本教程涉及的所有修改对缩进格式等有严格要求，担心自己控制不好的可以直接下载静态资源。参照教程进行修改。</strong></p></div><div class="btns rounded center">            <a class="button" href='https://wws.lanzous.com/iczRkk63tpi' title='下载资源文件'><i class='fas fa-download'></i>下载资源文件</a>          </div><div class="note info flat"><div class="hide-block"><button type="button" class="hide-button button--animated" style="">预览效果    </button><div class="hide-content"><p><img src= "https://cdn.jsdelivr.net/gh/Akilarlxh/akilarlxh.github.io@v2.1/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Akilarlxh/Picgo/assets/f4783623.png" alt=""></p></div></div></div><h1 id="魔改步骤"><a href="#魔改步骤" class="headerlink" title="魔改步骤"></a>魔改步骤</h1><ol><li>新建<code>[Blogroot]\themes\butterfly\layout\includes\sliderbar.pug</code><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">.blog-slider.swiper-container-fade.swiper-container-horizontal#swiper_container</span><br><span class="line">  .blog-slider__wrp.swiper-wrapper(style=&#x27;transition-duration: 0ms;&#x27;)</span><br><span class="line">    if site.data.slider</span><br><span class="line">      each i in site.data.slider</span><br><span class="line">        .blog-slider__item.swiper-slide(style=&#x27;width: 750px; opacity: 1; transform: translate3d(0px, 0px, 0px); transition-duration: 0ms;&#x27;)</span><br><span class="line">          a.blog-slider__img(href=url_for(i.link)  alt=&#x27;&#x27;)|</span><br><span class="line">            img(width=&#x27;48&#x27; height=&#x27;48&#x27; src=url_for(i.cover) onerror=`this.onerror=null;this.src=&#x27;` + url_for(theme.error_img.post_page) + `&#x27;`, alt=&#x27;&#x27;)</span><br><span class="line">          .blog-slider__content</span><br><span class="line">            span.blog-slider__code= i.timeline</span><br><span class="line">            a.blog-slider__title(href=url_for(i.link)  alt=&#x27;&#x27;)= i.title</span><br><span class="line">            .blog-slider__text= i.description</span><br><span class="line">            a.blog-slider__button(href=url_for(i.link)  alt=&#x27;&#x27;)= i.button      </span><br><span class="line">  .blog-slider__pagination.swiper-pagination-clickable.swiper-pagination-bullets</span><br><span class="line">script(defer src=url_for(theme.CDN.swiper_js))</span><br><span class="line">script(defer data-pjax src=url_for(theme.CDN.swiper_init))</span><br></pre></td></tr></table></figure></li><li>修改<code>[Blogroot]\themes\butterfly\layout\index.pug</code>，引入轮播图版块。<figure class="highlight diff"><table><tr><td class="code"><pre><span class="line">    extends includes/layout.pug</span><br><span class="line"></span><br><span class="line">    block content</span><br><span class="line">      include ./includes/mixins/post-ui.pug</span><br><span class="line">      #recent-posts.recent-posts</span><br><span class="line"><span class="addition">+       .recent-post-item(style=&#x27;height:auto;width:100%;&#x27;)</span></span><br><span class="line"><span class="addition">+         !=partial(&#x27;includes/sliderbar&#x27;, &#123;&#125;, &#123;cache:theme.fragment_cache&#125;)</span></span><br><span class="line">        +postUI</span><br><span class="line">        include includes/pagination.pug</span><br></pre></td></tr></table></figure></li><li>新建<code>[Blogroot]\themes\butterfly\source\js\swiper_init.js</code>,<div class="note info flat"><p>此处是swiper的初始化参数，具体配置内容可以自定义，详细参数请参看<a href="">Swiper官方文档</a></p></div><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> swiper = <span class="keyword">new</span> Swiper(<span class="string">&#x27;.blog-slider&#x27;</span>, &#123;</span><br><span class="line">  passiveListeners: <span class="literal">true</span>,</span><br><span class="line">  spaceBetween: <span class="number">30</span>,</span><br><span class="line">  effect: <span class="string">&#x27;fade&#x27;</span>,</span><br><span class="line">  loop: <span class="literal">true</span>,</span><br><span class="line">  autoplay: &#123;</span><br><span class="line">    disableOnInteraction: <span class="literal">true</span>,</span><br><span class="line">    delay: <span class="number">3000</span></span><br><span class="line">  &#125;,</span><br><span class="line">  mousewheel: <span class="literal">false</span>,</span><br><span class="line">  <span class="comment">// autoHeight: true,</span></span><br><span class="line">  pagination: &#123;</span><br><span class="line">    el: <span class="string">&#x27;.blog-slider__pagination&#x27;</span>,</span><br><span class="line">    clickable: <span class="literal">true</span>,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> comtainer = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;swiper_container&#x27;</span>);</span><br><span class="line">comtainer.onmouseenter = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  swiper.autoplay.stop();</span><br><span class="line">&#125;;</span><br><span class="line">comtainer.onmouseleave = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  swiper.autoplay.start();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>新建<code>[Blogroot]\themes\butterfly\source\css\_layout\swiperstyle.styl</code><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">*</span><br><span class="line">  <span class="attribute">box-sizing</span> border-box</span><br><span class="line">div#swiper_container</span><br><span class="line">  <span class="attribute">background</span> rgba(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0</span>);</span><br><span class="line">.blog-slider</span><br><span class="line">  <span class="attribute">width</span> <span class="number">100%</span></span><br><span class="line">  <span class="attribute">position</span> relative</span><br><span class="line">  <span class="attribute">border-radius</span> <span class="number">12px</span> <span class="number">8px</span> <span class="number">8px</span> <span class="number">12px</span></span><br><span class="line">  <span class="attribute">margin</span> auto</span><br><span class="line">  <span class="attribute">background</span> var(--global-bg)</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">10px</span></span><br><span class="line">  transition all .3s</span><br><span class="line"></span><br><span class="line">.blog-slider__item</span><br><span class="line">  <span class="attribute">display</span> flex</span><br><span class="line">  <span class="attribute">align-items</span> center</span><br><span class="line">  &amp;.swiper-slide-active</span><br><span class="line">    .blog-slider__img</span><br><span class="line">      img</span><br><span class="line">        <span class="attribute">opacity</span> <span class="number">1</span></span><br><span class="line">        transition-delay .3s</span><br><span class="line">    .blog-slider__content</span><br><span class="line">      &amp; &gt; *</span><br><span class="line">        <span class="attribute">opacity</span> <span class="number">1</span></span><br><span class="line">        <span class="attribute">transform</span> none</span><br><span class="line">      &amp; &gt; *:nth-child(<span class="number">1</span>)</span><br><span class="line">        <span class="attribute">transition-delay</span> <span class="number">0.3s</span></span><br><span class="line">      &amp; &gt; *:nth-child(<span class="number">2</span>)</span><br><span class="line">        <span class="attribute">transition-delay</span> <span class="number">0.4s</span></span><br><span class="line">      &amp; &gt; *:nth-child(<span class="number">3</span>)</span><br><span class="line">        <span class="attribute">transition-delay</span> <span class="number">0.5s</span></span><br><span class="line">      &amp; &gt; *:nth-child(<span class="number">4</span>)</span><br><span class="line">        <span class="attribute">transition-delay</span> <span class="number">0.6s</span></span><br><span class="line">      &amp; &gt; *:nth-child(<span class="number">5</span>)</span><br><span class="line">        <span class="attribute">transition-delay</span> <span class="number">0.7s</span></span><br><span class="line">      &amp; &gt; *:nth-child(<span class="number">6</span>)</span><br><span class="line">        <span class="attribute">transition-delay</span> <span class="number">0.8s</span></span><br><span class="line">      &amp; &gt; *:nth-child(<span class="number">7</span>)</span><br><span class="line">        <span class="attribute">transition-delay</span> <span class="number">0.9s</span></span><br><span class="line">      &amp; &gt; *:nth-child(<span class="number">8</span>)</span><br><span class="line">        <span class="attribute">transition-delay</span> <span class="number">1s</span></span><br><span class="line">      &amp; &gt; *:nth-child(<span class="number">9</span>)</span><br><span class="line">        <span class="attribute">transition-delay</span> <span class="number">1.1s</span></span><br><span class="line">      &amp; &gt; *:nth-child(<span class="number">10</span>)</span><br><span class="line">        <span class="attribute">transition-delay</span> <span class="number">1.2s</span></span><br><span class="line">      &amp; &gt; *:nth-child(<span class="number">11</span>)</span><br><span class="line">        <span class="attribute">transition-delay</span> <span class="number">1.3s</span></span><br><span class="line">      &amp; &gt; *:nth-child(<span class="number">12</span>)</span><br><span class="line">        <span class="attribute">transition-delay</span> <span class="number">1.4s</span></span><br><span class="line">      &amp; &gt; *:nth-child(<span class="number">13</span>)</span><br><span class="line">        <span class="attribute">transition-delay</span> <span class="number">1.5s</span></span><br><span class="line">      &amp; &gt; *:nth-child(<span class="number">14</span>)</span><br><span class="line">        <span class="attribute">transition-delay</span> <span class="number">1.6s</span></span><br><span class="line">      &amp; &gt; *:nth-child(<span class="number">15</span>)</span><br><span class="line">        <span class="attribute">transition-delay</span> <span class="number">1.7s</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">.blog-slider__img</span><br><span class="line">  <span class="attribute">width</span> <span class="number">200px</span></span><br><span class="line">  <span class="attribute">flex-shrink</span> <span class="number">0</span></span><br><span class="line">  <span class="attribute">height</span> <span class="number">200px</span></span><br><span class="line">  <span class="attribute">padding</span> <span class="number">10px</span></span><br><span class="line">  <span class="attribute">border-radius</span> <span class="number">5px</span></span><br><span class="line">  <span class="attribute">transform</span> translateX(<span class="number">0px</span>)</span><br><span class="line">  <span class="attribute">overflow</span> hidden</span><br><span class="line">  &amp;:after</span><br><span class="line">    <span class="attribute">content</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="attribute">position</span> absolute</span><br><span class="line">    <span class="attribute">top</span> <span class="number">0</span></span><br><span class="line">    <span class="attribute">left</span> <span class="number">0</span></span><br><span class="line">    <span class="attribute">width</span> <span class="number">100%</span></span><br><span class="line">    <span class="attribute">height</span> <span class="number">100%</span></span><br><span class="line">    <span class="attribute">border-radius</span> <span class="number">5px</span></span><br><span class="line">    <span class="attribute">opacity</span> <span class="number">0.8</span></span><br><span class="line">  img</span><br><span class="line">    <span class="attribute">width</span> <span class="number">100%</span></span><br><span class="line">    <span class="attribute">height</span> <span class="number">100%</span></span><br><span class="line">    <span class="attribute">object-fit</span> cover</span><br><span class="line">    <span class="attribute">display</span> block</span><br><span class="line">    <span class="attribute">opacity</span> <span class="number">0</span></span><br><span class="line">    <span class="attribute">border-radius</span> <span class="number">5px</span></span><br><span class="line">    transition all .3s</span><br><span class="line"></span><br><span class="line">.blog-slider__content</span><br><span class="line">  <span class="attribute">padding-right</span> <span class="number">50px</span></span><br><span class="line">  <span class="attribute">padding-left</span> <span class="number">50px</span></span><br><span class="line">  &amp; &gt; *</span><br><span class="line">    <span class="attribute">opacity</span> <span class="number">0</span></span><br><span class="line">    <span class="attribute">transform</span> translateY(<span class="number">25px</span>)</span><br><span class="line">    transition all .4s</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">.blog-slider__code</span><br><span class="line">  <span class="attribute">color</span> var(--font-color)</span><br><span class="line">  <span class="attribute">margin-bottom</span> <span class="number">0px</span></span><br><span class="line">  <span class="attribute">display</span> block</span><br><span class="line">  <span class="attribute">font-weight</span> <span class="number">500</span></span><br><span class="line"></span><br><span class="line">.blog-slider__title</span><br><span class="line">  <span class="attribute">font-size</span> <span class="number">18px</span></span><br><span class="line">  <span class="attribute">font-weight</span> <span class="number">700</span></span><br><span class="line">  <span class="attribute">color</span> var(--font-color)</span><br><span class="line">  <span class="attribute">margin-bottom</span> <span class="number">15px</span></span><br><span class="line">  -webkit-line-clamp <span class="number">1</span></span><br><span class="line">  <span class="attribute">display</span> -webkit-box</span><br><span class="line">  <span class="attribute">overflow</span> hidden</span><br><span class="line">  -webkit-box-orient vertical</span><br><span class="line"></span><br><span class="line">.blog-slider__text</span><br><span class="line">  <span class="attribute">color</span> var(--font-color)</span><br><span class="line">  -webkit-line-clamp <span class="number">1</span></span><br><span class="line">  <span class="attribute">display</span> -webkit-box</span><br><span class="line">  <span class="attribute">overflow</span> hidden</span><br><span class="line">  -webkit-box-orient vertical</span><br><span class="line">  <span class="attribute">margin-bottom</span> <span class="number">15px</span></span><br><span class="line">  <span class="attribute">line-height</span> <span class="number">1.5em</span></span><br><span class="line">  <span class="attribute">width</span> <span class="number">100%</span></span><br><span class="line">  <span class="attribute">display</span> block</span><br><span class="line">  <span class="attribute">word-break</span> break-all</span><br><span class="line">  <span class="attribute">word-wrap</span> break-word</span><br><span class="line"></span><br><span class="line">.blog-slider__button</span><br><span class="line">  <span class="attribute">display</span> inline-flex</span><br><span class="line">  <span class="attribute">background-color</span> var(--btn-bg)</span><br><span class="line">  <span class="attribute">padding</span> <span class="number">4px</span> <span class="number">14px</span></span><br><span class="line">  <span class="attribute">border-radius</span> <span class="number">8px</span></span><br><span class="line">  <span class="attribute">color</span> var(--btn-color)</span><br><span class="line">  <span class="attribute">text-decoration</span> none</span><br><span class="line">  <span class="attribute">font-weight</span> <span class="number">500</span></span><br><span class="line">  <span class="attribute">justify-content</span> center</span><br><span class="line">  <span class="attribute">text-align</span> center</span><br><span class="line">  <span class="attribute">letter-spacing</span> <span class="number">1px</span></span><br><span class="line">  <span class="attribute">display</span> none</span><br><span class="line">  &amp;:hover</span><br><span class="line">    <span class="attribute">background-color</span> var(--btn-hover-color)</span><br><span class="line">    <span class="attribute">color</span> var(--btn-color)</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.blog-slider</span> <span class="selector-class">.swiper-container-horizontal</span> &gt; <span class="selector-class">.swiper-pagination-bullets</span>, <span class="selector-class">.blog-slider</span> <span class="selector-class">.swiper-pagination-custom</span>, <span class="selector-class">.blog-slider</span> .swiper-pagination-fraction</span><br><span class="line">  <span class="attribute">bottom</span> <span class="number">10px</span></span><br><span class="line">  <span class="attribute">left</span> <span class="number">0</span></span><br><span class="line">  <span class="attribute">width</span> <span class="number">100%</span></span><br><span class="line"></span><br><span class="line">.blog-slider__pagination</span><br><span class="line">  <span class="attribute">position</span> absolute</span><br><span class="line">  <span class="attribute">z-index</span> <span class="number">21</span></span><br><span class="line">  <span class="attribute">right</span> <span class="number">20px</span></span><br><span class="line">  <span class="attribute">width</span> <span class="number">11px</span> !important</span><br><span class="line">  <span class="attribute">text-align</span> center</span><br><span class="line">  <span class="attribute">left</span> auto !important</span><br><span class="line">  <span class="attribute">top</span> <span class="number">50%</span></span><br><span class="line">  <span class="attribute">bottom</span> auto !important</span><br><span class="line">  <span class="attribute">transform</span> translateY(-<span class="number">50%</span>)</span><br><span class="line">  &amp;.swiper-pagination-bullets</span><br><span class="line">    .swiper-pagination-bullet</span><br><span class="line">      <span class="attribute">margin</span> <span class="number">8px</span> <span class="number">0</span></span><br><span class="line">  .swiper-pagination-bullet</span><br><span class="line">    <span class="attribute">width</span> <span class="number">11px</span></span><br><span class="line">    <span class="attribute">height</span> <span class="number">11px</span></span><br><span class="line">    <span class="attribute">display</span> block</span><br><span class="line">    <span class="attribute">border-radius</span> <span class="number">10px</span></span><br><span class="line">    <span class="attribute">background</span> <span class="number">#858585</span></span><br><span class="line">    <span class="attribute">opacity</span> <span class="number">0.2</span></span><br><span class="line">    transition all .3s</span><br><span class="line">  .swiper-pagination-bullet-active</span><br><span class="line">    <span class="attribute">opacity</span> <span class="number">1</span></span><br><span class="line">    <span class="attribute">background</span> var(--btn-bg)</span><br><span class="line">    <span class="attribute">height</span> <span class="number">30px</span></span><br><span class="line"></span><br><span class="line">@media screen and (<span class="attribute">max-width</span>: <span class="number">600px</span>)</span><br><span class="line">  .blog-slider__pagination</span><br><span class="line">    <span class="attribute">transform</span> translateX(-<span class="number">50%</span>)</span><br><span class="line">    <span class="attribute">left</span> <span class="number">50%</span> !important</span><br><span class="line">    <span class="attribute">top</span> <span class="number">320px</span></span><br><span class="line">    <span class="attribute">width</span> <span class="number">100%</span> !important</span><br><span class="line">    <span class="attribute">display</span> flex</span><br><span class="line">    <span class="attribute">justify-content</span> center</span><br><span class="line">    <span class="attribute">align-items</span> center</span><br><span class="line"></span><br><span class="line">  .blog-slider__pagination</span><br><span class="line">    &amp;.swiper-pagination-bullets</span><br><span class="line">      .swiper-pagination-bullet</span><br><span class="line">        <span class="attribute">margin</span> <span class="number">0</span> <span class="number">5px</span></span><br><span class="line"></span><br><span class="line">  .blog-slider__pagination</span><br><span class="line">    .swiper-pagination-bullet-active</span><br><span class="line">      <span class="attribute">height</span> <span class="number">11px</span></span><br><span class="line">      <span class="attribute">width</span> <span class="number">30px</span></span><br><span class="line"></span><br><span class="line">  .blog-slider__button</span><br><span class="line">    <span class="attribute">display</span> inline-flex</span><br><span class="line">    <span class="attribute">width</span> <span class="number">100%</span></span><br><span class="line">  .blog-slider__text</span><br><span class="line">    <span class="attribute">margin-bottom</span> <span class="number">40px</span></span><br><span class="line"></span><br><span class="line">  .blog-slider</span><br><span class="line">    <span class="attribute">min-height</span> <span class="number">350px</span></span><br><span class="line">    <span class="attribute">height</span> auto</span><br><span class="line">    <span class="attribute">margin-top</span> <span class="number">110px</span></span><br><span class="line">    <span class="attribute">margin-bottom</span> <span class="number">10px</span></span><br><span class="line"></span><br><span class="line">  .blog-slider__content</span><br><span class="line">    <span class="attribute">margin-top</span> -<span class="number">80px</span></span><br><span class="line">    <span class="attribute">text-align</span> center</span><br><span class="line">    <span class="attribute">padding</span> <span class="number">0</span> <span class="number">30px</span></span><br><span class="line"></span><br><span class="line">  .blog-slider__item</span><br><span class="line">    <span class="attribute">flex-direction</span> column</span><br><span class="line"></span><br><span class="line">  .blog-slider__img</span><br><span class="line">    <span class="attribute">transform</span> translateY(-<span class="number">50%</span>)</span><br><span class="line">    <span class="attribute">width</span> <span class="number">90%</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  .blog-slider__content</span><br><span class="line">    <span class="attribute">padding-left</span> <span class="number">10px</span></span><br><span class="line">    <span class="attribute">padding-right</span> <span class="number">10px</span></span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.blog-slider__pagination</span><span class="selector-class">.swiper-pagination-clickable</span>.swiper-pagination-bullets</span><br><span class="line">    <span class="attribute">top</span> <span class="number">110px</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@media screen and (<span class="attribute">min-width</span>: <span class="number">600px</span>)</span><br><span class="line">  .blog-slider</span><br><span class="line">    <span class="attribute">height</span> <span class="number">200px</span></span><br><span class="line"></span><br><span class="line">  .blog-slider__img</span><br><span class="line">    <span class="attribute">height</span> <span class="number">200px</span></span><br></pre></td></tr></table></figure></li><li>配置CDN依赖项，<ul><li>修改<code>[Blogroot]\_config.butterfly.yml</code>,<figure class="highlight diff"><table><tr><td class="code"><pre><span class="line">    CDN:</span><br><span class="line">      # main</span><br><span class="line">      main_css: /css/index.css</span><br><span class="line">      jquery: https://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js</span><br><span class="line">      main: /js/main.js</span><br><span class="line">      utils: /js/utils.js</span><br><span class="line"><span class="addition">+     # 首页轮播图</span></span><br><span class="line"><span class="addition">+     swiper_js: https://cdnjs.cloudflare.com/ajax/libs/Swiper/4.1.6/js/swiper.min.js</span></span><br><span class="line"><span class="addition">+     swiper_css: https://cdnjs.cloudflare.com/ajax/libs/Swiper/4.1.6/css/swiper.min.css</span></span><br><span class="line"><span class="addition">+     swiper_init: /js/swiper_init.js</span></span><br></pre></td></tr></table></figure></li><li>修改<code>[Blogroot]\themes\butterfly\source\css\index.styl</code>,在最上方添加引入内容：<figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"><span class="addition">+ @import url(hexo-config(&#x27;CDN.swiper_css&#x27;))</span></span><br><span class="line">  if hexo-config(&#x27;css_prefix&#x27;)</span><br><span class="line">    @import &#x27;nib&#x27;</span><br><span class="line">  @import &#x27;_third-party/normalize.min.css&#x27;</span><br><span class="line">  // project</span><br><span class="line">  @import &#x27;var&#x27;</span><br><span class="line">  @import &#x27;_global/*&#x27;</span><br><span class="line">  @import &#x27;_highlight/highlight&#x27;</span><br><span class="line">  @import &#x27;_page/*&#x27;</span><br><span class="line">  @import &#x27;_layout/*&#x27;</span><br><span class="line">  @import &#x27;_tags/*&#x27;</span><br><span class="line">  @import &#x27;_mode/*&#x27;</span><br></pre></td></tr></table></figure></li></ul></li><li>新建<code>[Blogroot]\source\_data\slider.yml</code>,在里面填写想要置顶的文章的信息<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">cover:</span> <span class="string">封面图片链接</span></span><br><span class="line">  <span class="attr">timeline:</span> <span class="string">&#x27;2020-10-01&#x27;</span> <span class="comment"># 日期，需要用&#x27;&#x27;包裹</span></span><br><span class="line">  <span class="attr">link:</span> <span class="string">置顶文章链接，站内文章建议填相对链接</span></span><br><span class="line">  <span class="attr">title:</span> <span class="string">置顶文章标题</span></span><br><span class="line">  <span class="attr">description:</span> <span class="string">置顶文章描述</span></span><br><span class="line">  <span class="attr">button:</span> <span class="string">手机端按钮内容</span></span><br><span class="line"><span class="comment"># 示例如下</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">cover:</span> <span class="string">/img/cover1.webp</span></span><br><span class="line">  <span class="attr">timeline:</span> <span class="string">&#x27;2020-10-01&#x27;</span></span><br><span class="line">  <span class="attr">link:</span> <span class="string">/posts/7c16c4bb/</span></span><br><span class="line">  <span class="attr">title:</span> <span class="string">📁Hexo博客访问优化日记</span></span><br><span class="line">  <span class="attr">description:</span> <span class="string">对本站的Hexo优化路线做了个归纳.</span></span><br><span class="line">  <span class="attr">button:</span> <span class="string">🍡详情</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">cover:</span> <span class="string">/img/cover2.webp</span></span><br><span class="line">  <span class="attr">timeline:</span> <span class="string">&#x27;2020-10-27&#x27;</span></span><br><span class="line">  <span class="attr">link:</span> <span class="string">/posts/f99b208/</span></span><br><span class="line">  <span class="attr">title:</span> <span class="string">🦋基于Butterfly主题的美化日记</span></span><br><span class="line">  <span class="attr">description:</span> <span class="string">基于butterfly的魔改美化记录.</span></span><br><span class="line">  <span class="attr">button:</span> <span class="string">🍡详情</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <summary type="html">给博客首页添加轮播图</summary>
    
    
    
    <category term="🍡Akilarの糖葫芦" scheme="https://akilar.top/categories/%F0%9F%8D%A1Akilar%E3%81%AE%E7%B3%96%E8%91%AB%E8%8A%A6/"/>
    
    
    <category term="📁Hexo" scheme="https://akilar.top/tags/%F0%9F%93%81Hexo/"/>
    
    <category term="🦋Butterfly" scheme="https://akilar.top/tags/%F0%9F%A6%8BButterfly/"/>
    
  </entry>
  
  <entry>
    <title>DIY外挂标签的简单写法与应用</title>
    <link href="https://akilar.top/posts/e2bf861f/"/>
    <id>https://akilar.top/posts/e2bf861f/</id>
    <published>2020-12-28T11:05:04.000Z</published>
    <updated>2021-01-15T18:39:04.976Z</updated>
    
    <content type="html"><![CDATA[<details cyan><summary> 点击查看更新记录 </summary>              <div class='content'>              <div class="timeline"><p class='p h2'>更新记录</p><div class="timenode"><div class="meta"><p><p>2020-12-28:起草教程</p></p></div><div class="body"><ol><li>添加参考教程内容</li><li>添加TODO</li><li>添加文档简析和基础示例</li></ol></div></div><div class="timenode"><div class="meta"><p><p>2020-12-29:第一版编写完成</p></p></div><div class="body"><ol><li>添加初级应用</li><li>添加具体案例</li></ol></div></div></div>              </div>            </details><details yellow><summary> 点击查看参考教程 </summary>              <div class='content'>              <div class="table-container"><table><thead><tr><th style="text-align:left">参考方向</th><th style="text-align:left">教程原贴</th></tr></thead><tbody><tr><td style="text-align:left">参考了标签基础写法</td><td style="text-align:left"><a href="https://hexo.io/zh-cn/api/tag">Hexo开发文档-Tag</a></td></tr><tr><td style="text-align:left">参考了内置辅助函数的用法</td><td style="text-align:left"><a href="https://hexo.io/zh-cn/docs/helpers">Hexo开发文档-辅助函数</a></td></tr><tr><td style="text-align:left">参考stylus的基本写法</td><td style="text-align:left"><a href="https://stylus.bootcss.com/">stylus官方文档</a></td></tr><tr><td style="text-align:left">Atom的css转stylus插件</td><td style="text-align:left"><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/serhiiboreiko/css-to-stylus-atom"><img src= "https://cdn.jsdelivr.net/gh/Akilarlxh/akilarlxh.github.io@v2.1/img/loading.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?username=serhiiboreiko&repo=css-to-stylus-atom&show_owner=true"/></a></td></tr></tbody></table></div>              </div>            </details><h1 id="简单介绍"><a href="#简单介绍" class="headerlink" title="简单介绍"></a>简单介绍</h1><p><code>Hexo</code>有提供外挂标签的<a href="https://hexo.io/zh-cn/api/tag">API介绍文档</a>。首先我们要了解什么是外挂标签。它的实质其实就是简化<code>Html</code>的写法，把大片重复的内容交给<code>Hexo</code>编译，我们只需要在外挂标签内提供必要的参数即可。这也是我一度钟爱外挂标签的原因。<del>毕竟很方便,可以拿来偷懒嘛。</del>本帖提供的是一些较为简单的外挂标签写法。更加精深的内容可以参考官方开发文档和现有的外挂标签脚本。本站现有的外挂标签写法基本都已经集成在这篇教程中：<div class="tag link"><a class="link-card" title="基于Butterfly的外挂标签引入" href="/posts/615e2dec/"><div class="left"><img src= "https://cdn.jsdelivr.net/gh/Akilarlxh/akilarlxh.github.io@v2.1/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Akilarlxh/Akilarlxh.github.io/img/siteicon/favicon.ico"/></div><div class="right"><p class="text">基于Butterfly的外挂标签引入</p><p class="url">/posts/615e2dec/</p></div></a></div></p><h1 id="教程正文"><a href="#教程正文" class="headerlink" title="教程正文"></a>教程正文</h1><div class="note warning morden flat"><p>此处声明一下开发原则。<br>外挂标签的编译函数属于<code>Hexo</code>内部函数，所以应该放在<code>scripts</code>文件夹下。<br>千万不要放在<code>source/js/</code>目录下，然后用<code>inject</code>引入的外部函数引用方法。<br>本帖的开发原则是将标签函数脚本放在<code>[Blogroot]\themes\butterfly\scripts\tag\</code>目录下。<br>以下如无另外声明，一律都是放在这个目录了。</p></div><h2 id="文档剖析"><a href="#文档剖析" class="headerlink" title="文档剖析"></a>文档剖析</h2><details cyan open><summary> 点击查看文档剖析 </summary>              <div class='content'>              <p>首先来看一个最简单的标签函数结构。<br><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">hexo.extend.tag.register(<span class="string">&#x27;name&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">args, content</span>)</span>&#123;</span><br><span class="line">&#125;, options);</span><br></pre></td></tr></table></figure></p><ol><li><code>name</code>：表示外挂标签的名字，为字符串，为了避免和之后会提到的<emp>参数处理函数名</emp>混淆，建议用<code>&#39;&#39;</code>包裹。</li><li><code>args</code>：外挂标签传入的参数，可以是一个包含多个参数的字符串，之后再用分割函数处理成数组。</li><li><code>content</code>： 外挂标签涵盖的内容。</li><li><code>options</code>： 标签函数的参数，有<code>ends</code>和<code>async</code><ul><li><code>ends</code>:决定是否使用结束标签，此选项默认为<code>false</code>。<br>如果为<code>true</code>，则需要添加形似<code>endname</code>的结束标签。<br>注意，只有<code>ends</code>设为<code>true</code>时，<code>content</code>参数才有效。适用于需要在外挂标签内嵌套外挂标签或者markdown语法的情况。</li><li><code>async</code>:决定是否开启非同步渲染模式，此选项默认为<code>false</code>。<br>它用于决定是否开启在<code>hexo s</code>预览时对外挂标签进行同步渲染。<br>如设为<code>false</code>则开启同步渲染。所以建议尽量不要去改它。</li></ul></li></ol><p>如果是示例中这样的写法的话，他的外挂标签函数以及对应的外挂标签应该是:</p><ol><li><code>ends</code>为<code>false</code>的情况，此时不存在<code>content</code>参数,所以没必要写了。<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//标签函数结构</span></span><br><span class="line">hexo.extend.tag.register(<span class="string">&#x27;name&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">args</span>)</span>&#123;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//对应的外挂标签写法</span></span><br><span class="line">&#123;% name args %&#125;</span><br></pre></td></tr></table></figure></li><li><code>ends</code>为<code>true</code>的情况，此时<code>content</code>参数有效。<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//标签函数结构</span></span><br><span class="line">hexo.extend.tag.register(<span class="string">&#x27;name&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">args, content</span>)</span>&#123;</span><br><span class="line">&#125;,&#123;<span class="attr">ends</span>:<span class="literal">true</span>&#125;);</span><br><span class="line"><span class="comment">//对应的外挂标签写法</span></span><br><span class="line">&#123;% name args %&#125;content&#123;% endname %&#125;  </span><br></pre></td></tr></table></figure></li></ol>              </div>            </details><h2 id="简单示例"><a href="#简单示例" class="headerlink" title="简单示例"></a>简单示例</h2><details cyan open><summary> 点击查看简单示例 </summary>              <div class='content'>              <ol><li>ends为false的情况:<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">hexo.extend.tag.register(<span class="string">&#x27;kbd&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">args</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">`&lt;kbd&gt;<span class="subst">$&#123;args.join(<span class="string">&#x27; &#x27;</span>)&#125;</span>&lt;/kbd&gt;`</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>则标签函数写法为<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% kbd args %&#125;</span><br></pre></td></tr></table></figure></li><li>会被编译成<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;kbd&gt;args&lt;&#x2F;kbd&gt;</span><br></pre></td></tr></table></figure></li></ul></li><li>ends为true的情况：<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">hexo.extend.tag.register(<span class="string">&#x27;tip&#x27;</span>,<span class="function"><span class="keyword">function</span> <span class="title">tip</span> (<span class="params">args, content</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">`&lt;div class=&quot;tip <span class="subst">$&#123;args.join(<span class="string">&#x27; &#x27;</span>)&#125;</span>&quot;&gt;<span class="subst">$&#123;hexo.render.renderSync(&#123; text: content, engine: <span class="string">&#x27;markdown&#x27;</span> &#125;</span>)&#125;&lt;/div&gt;`</span></span><br><span class="line">&#125;, &#123; <span class="attr">ends</span>: <span class="literal">true</span> &#125;)</span><br></pre></td></tr></table></figure>这个函数也可以写成如下形式，这样更符合开发体验：<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//参数处理函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">tip</span> (<span class="params">args, content</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">`&lt;div class=&quot;tip <span class="subst">$&#123;args.join(<span class="string">&#x27; &#x27;</span>)&#125;</span>&quot;&gt;<span class="subst">$&#123;hexo.render.renderSync(&#123; text: content, engine: <span class="string">&#x27;markdown&#x27;</span> &#125;</span>)&#125;&lt;/div&gt;`</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//标签注册函数</span></span><br><span class="line">hexo.extend.tag.register(<span class="string">&#x27;tip&#x27;</span>,tip, &#123; <span class="attr">ends</span>: <span class="literal">true</span> &#125;)</span><br></pre></td></tr></table></figure><ul><li>则标签函数写法为<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% tip args %&#125;content&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure></li><li>会被编译成<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div class&#x3D;&quot;tip args&quot;&gt;content&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>此处的<code>args</code>可以是一个字符串，例如<code>args=&#39;warning fa fa-icon&#39;</code>。<br><code>${hexo.render.renderSync({ text: content, engine: &#39;markdown&#39; })}</code>表示使用<code>markdown</code>语法来编译处理<code>content</code>的内容。<br>所以<code>content</code>可以是任何<code>markdown</code>语法兼容的内容，乃至其他外挂标签。<br>更多辅助函数内容请参阅<a href="https://hexo.io/zh-cn/docs/helpers">Hexo开发文档-辅助函数</a></li></ul></li></ol>              </div>            </details><h2 id="初级应用"><a href="#初级应用" class="headerlink" title="初级应用"></a>初级应用</h2><details cyan open><summary> 点击查看初级应用 </summary>              <div class='content'>              <p>从上文的介绍来看，想必各位已经了解了基本用法，此处建议开发者采用如下方案进行标签函数的编写。将整个标签函数分为<emp>参数处理函数</emp>和<emp>标签注册函数</emp>。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//参数处理函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">poem</span> (<span class="params">args, content</span>) </span>&#123;</span><br><span class="line">  args = args.join(<span class="string">&#x27; &#x27;</span>).split(<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">  <span class="keyword">let</span> p0 = args[<span class="number">0</span>]</span><br><span class="line">  <span class="keyword">let</span> p1 = args[<span class="number">1</span>]?args[<span class="number">1</span>]:<span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="keyword">return</span> <span class="string">`&lt;div class=&#x27;poem&#x27;&gt;&lt;div class=&#x27;poem-title&#x27;&gt;<span class="subst">$&#123;p0&#125;</span>&lt;/div&gt;&lt;div class=&#x27;poem-author&#x27;&gt;<span class="subst">$&#123;p1&#125;</span>&lt;/div&gt;<span class="subst">$&#123;hexo.render.renderSync(&#123; text: content, engine: <span class="string">&#x27;markdown&#x27;</span> &#125;</span>)&#125;&lt;/div&gt;`</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//标签注册函数</span></span><br><span class="line">hexo.extend.tag.register(<span class="string">&#x27;poem&#x27;</span>,poem,&#123; <span class="attr">ends</span>: <span class="literal">true</span> &#125;);</span><br></pre></td></tr></table></figure><ol><li><code>args = args.join(&#39; &#39;).split(&#39;,&#39;)</code>表示对字符串<code>args</code>做分割处理，使用<code>,</code>作为分割标记,然后强制转换成数组。<br>例如<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//原本</span></span><br><span class="line">args=<span class="string">&#x27;a,ab,abc,abcd&#x27;</span></span><br><span class="line"><span class="comment">//运行args = args.join(&#x27; &#x27;).split(&#x27;,&#x27;)后</span></span><br><span class="line">args=[a,ab,abc,abcd]</span><br><span class="line"><span class="comment">//此时</span></span><br><span class="line">args[<span class="number">0</span>]=<span class="string">&#x27;a&#x27;</span>  args[<span class="number">1</span>]=<span class="string">&#x27;ab&#x27;</span> ......</span><br><span class="line"><span class="comment">//以此类推，要注意数组是从0开始计数的</span></span><br></pre></td></tr></table></figure></li><li>这里的<code>let p1 = args[1]?args[1]:&#39;&#39;</code>是<code>javascript</code>的三元运算符。<ul><li>语法为：<strong>条件表达式?表达式1:表达式2</strong>。</li><li>说明：问号前面的位置是判断的条件，判断结果为布尔型，为<code>true</code>时调用表达式1，为<code>false</code>时调用表达式2。</li><li>使用这个方式，我们可以配置对应参数的默认值。<br>(因为分割好的数组args的实质是个动态数组，所以未取到的值应该为空<code>null</code>，如果转化成布尔型的话，就是<code>false</code>)</li></ul></li></ol>              </div>            </details><h2 id="具体案例"><a href="#具体案例" class="headerlink" title="具体案例"></a>具体案例</h2><details cyan open><summary> 点击查看具体案例 </summary>              <div class='content'>              <p>例如我要将<code>iconfont</code>的<code>symbol</code>引用法做成外挂标签。<br>具体教程内容详见：</p><div class="tag link"><a class="link-card" title="Hexo引入阿里矢量图标库" href="/posts/d2ebecef/"><div class="left"><img src= "https://cdn.jsdelivr.net/gh/Akilarlxh/akilarlxh.github.io@v2.1/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Akilarlxh/Akilarlxh.github.io/img/siteicon/favicon.ico"/></div><div class="right"><p class="text">Hexo引入阿里矢量图标库</p><p class="url">/posts/d2ebecef/</p></div></a></div><ol><li><p>首先我们需要提取三个要素，</p><ul><li>最终的HTML结构，我们需要参考它来编写<emp>参数处理函数</emp>；例如本次的最终结构是<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">class</span>=<span class="string">&quot;icon&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">use</span> <span class="attr">xlink:href</span>=<span class="string">&quot;#icon-xxx&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">use</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>需要引入的样式依赖（可能是<code>js</code>也可能是<code>css</code>或者两者都有，常规<code>inject</code>即可，添加样式不是本帖的主要内容，所以不做赘述）；</li><li>可能用到的具体参数(例如本次案例中，<emp>图标名称</emp>和<emp>图标大小</emp>都可以作为参数参考值)。</li></ul></li><li><p>其次需要确定我们需要的外挂标签样式。因为只是图标，所以应该不需要<code>content</code>内容了，因此采用<code>ends: false</code>的编写方式。并且要用到两个参数，一个是图标名称，一个是图标大小。</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% icon [icon-xxxx],[font-size] %&#125;</span><br></pre></td></tr></table></figure></li><li>然后就可以根据这些信息编写<emp>参数处理函数</emp>，此处提供一个小技巧，可以用内联样式来引入一些特定参数，比如此处的<emp>图标大小</emp>。<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//参数处理函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">iconFont</span>(<span class="params">args</span>) </span>&#123;</span><br><span class="line">  <span class="comment">//使用逗号分割参数字符串，得到多个参数</span></span><br><span class="line">  args = args.join(<span class="string">&#x27; &#x27;</span>).split(<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">  <span class="keyword">let</span> p0 = args[<span class="number">0</span>]</span><br><span class="line">  <span class="comment">// 使用三元运算符设置字体大小的默认值</span></span><br><span class="line">  <span class="keyword">let</span> p1 = args[<span class="number">1</span>]?args[<span class="number">1</span>]:<span class="number">1</span></span><br><span class="line">  <span class="comment">//用style=&quot;...&quot;的内联样式写法添加特定参数</span></span><br><span class="line">  <span class="keyword">return</span> <span class="string">`&lt;svg class=&quot;icon&quot; style=&quot;width:<span class="subst">$&#123;p1&#125;</span>em; height:<span class="subst">$&#123;p1&#125;</span>em&quot; aria-hidden=&quot;true&quot;&gt;&lt;use xlink:href=&quot;#<span class="subst">$&#123;p0&#125;</span>&quot;&gt;&lt;/use&gt;&lt;/svg&gt;`</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//标签注册函数</span></span><br><span class="line">hexo.extend.tag.register(<span class="string">&#x27;icon&#x27;</span>,iconFont);</span><br></pre></td></tr></table></figure></li><li>然后按照上述写法，可以得到最后的编译结果，假定我设置图标为<code>icon-rat</code>,图标大小为<code>5</code><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 外挂标签结构 --&gt;</span></span><br><span class="line">&#123;% icon icon-rat,5 %&#125;</span><br><span class="line"><span class="comment">&lt;!-- 编译好的HTML结构 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">class</span>=<span class="string">&quot;icon&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width:5em; height:5em&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">use</span> <span class="attr">xlink:href</span>=<span class="string">&quot;#icon-rat&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">use</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol>              </div>            </details>]]></content>
    
    
    <summary type="html">俗话说授人以鱼不如授人以渔</summary>
    
    
    
    <category term="🍡Akilarの糖葫芦" scheme="https://akilar.top/categories/%F0%9F%8D%A1Akilar%E3%81%AE%E7%B3%96%E8%91%AB%E8%8A%A6/"/>
    
    
    <category term="📁Hexo" scheme="https://akilar.top/tags/%F0%9F%93%81Hexo/"/>
    
  </entry>
  
  <entry>
    <title>使用wowjs给博客添加动画效果</title>
    <link href="https://akilar.top/posts/abab51cf/"/>
    <id>https://akilar.top/posts/abab51cf/</id>
    <published>2020-12-23T20:59:28.000Z</published>
    <updated>2021-01-15T18:39:04.976Z</updated>
    
    <content type="html"><![CDATA[<details cyan><summary> 点击查看更新记录 </summary>              <div class='content'>              <div class="timeline"><p class='p h2'>更新记录</p><div class="timenode"><div class="meta"><p><p>2020-12-23:内测版v0.01</p></p></div><div class="body"><ol><li>编写参考文档</li><li>编写TODO</li><li>编写基础引入方案</li></ol></div></div><div class="timenode"><div class="meta"><p><p>2020-12-24:内测版v0.02</p></p></div><div class="body"><ol><li>优化基础引入方案的异步加载和pjax适配</li></ol></div></div><div class="timenode"><div class="meta"><p><p>2020-12-26:内测版v0.03</p></p></div><div class="body"><ol><li>在基础方案基础上实现插件化配置。</li><li>新增四个配置项</li><li>优化配置逻辑，弃用<code>_data/wowjs.yml</code></li><li>支持直接在主题配置文件内配置动画类和动画效果</li><li>优化了各静态资源的引入逻辑</li></ol></div></div><div class="timenode"><div class="meta"><p><p>2020-12-26:内测版v0.04</p></p></div><div class="body"><ol><li>新增外挂标签写法</li></ol></div></div></div>              </div>            </details><details yellow><summary> 点击查看参考教程 </summary>              <div class='content'>              <div class="table-container"><table><thead><tr><th style="text-align:left">参考方向</th><th style="text-align:left">教程原贴</th></tr></thead><tbody><tr><td style="text-align:left">动画样式依赖</td><td style="text-align:left"><a href="https://animate.style/">animate.css</a></td></tr><tr><td style="text-align:left">wowjs文档</td><td style="text-align:left"><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/graingert/wow"><img src= "https://cdn.jsdelivr.net/gh/Akilarlxh/akilarlxh.github.io@v2.1/img/loading.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?username=graingert&repo=wow&show_owner=true"/></a></td></tr></tbody></table></div>              </div>            </details><h1 id="基础引用"><a href="#基础引用" class="headerlink" title="基础引用"></a>基础引用</h1><details red><summary> 若您不想修改源码，只需使用基础引用方案即可 </summary>              <div class='content'>              <ol><li>新建<code>[Blogroot]\themes\butterfly\source\js\wow_init.js</code>，配置特性动画的默认项。<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">wow = <span class="keyword">new</span> WOW(&#123;</span><br><span class="line">  boxClass: <span class="string">&#x27;wow&#x27;</span>,</span><br><span class="line">  <span class="comment">// 当用户滚动时显示隐藏框的类名称</span></span><br><span class="line">  animateClass: <span class="string">&#x27;animate__animated&#x27;</span>,</span><br><span class="line">  <span class="comment">// 触发 CSS 动画的类名称（动画库默认为&quot;animate.css&quot;库）</span></span><br><span class="line">  offset: <span class="number">0</span>,</span><br><span class="line">  <span class="comment">// 定义浏览器视口底部与隐藏框顶部之间的距离。</span></span><br><span class="line">  <span class="comment">// 当用户滚动并到达此距离时，将显示隐藏的框。</span></span><br><span class="line">  mobile: <span class="literal">false</span>,</span><br><span class="line">  <span class="comment">// 在移动设备上打开/关闭wow.js。</span></span><br><span class="line">  live: <span class="literal">true</span></span><br><span class="line">  <span class="comment">// 在页面上检查新的 wow.js元素。</span></span><br><span class="line">&#125;)</span><br><span class="line">wow.init();</span><br></pre></td></tr></table></figure></li><li>引入js和css样式，修改<code>[Blogroot]\_config.butterfly.yml</code>的<code>inject</code>配置项，添加样式资源。<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css&quot;</span> <span class="string">media=&quot;defer&quot;</span> <span class="string">onload=&quot;this.media=&#x27;all&#x27;&quot;&gt;</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">defer</span> <span class="string">src=&quot;https://cdn.jsdelivr.net/gh/graingert/wow@1.3.0/dist/wow.min.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">defer</span> <span class="string">data-pjax</span> <span class="string">src=&quot;/js/wow_init.js&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure></li><li>选择需要添加动画的dom元素，添加动画class类。此处提供三种写法。<ul><li>页面内写法，拟给<code>&lt;div class=&#39;example&#39;&gt;&lt;div&gt;</code>套上动画。一般在page页面或post页面中使用（也就是写博客的.md文件）。<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- raw的外挂标签是告诉渲染引擎这段代码不用渲染。 --&gt;</span></span><br><span class="line">&#123;% raw %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;example wow animate__bounceInUp&quot;</span>&gt;</span></span><br><span class="line">Content to Reveal Here</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure></li><li>pug写法，拟给首页文章卡片套上动画，直接源码修改：<br>修改<code>[Blogroot]\themes\butterfly\layout\includes\mixins\post-ui.pug</code><figure class="highlight diff"><table><tr><td class="code"><pre><span class="line">    mixin postUI(posts)</span><br><span class="line">      each article , index in page.posts.data</span><br><span class="line"><span class="deletion">-       .recent-post-item</span></span><br><span class="line"><span class="addition">+       .recent-post-item.wow.animate__zoomIn</span></span><br><span class="line">          - let link = article.link || article.path</span><br><span class="line">          - let title = article.title || _p(&#x27;no_title&#x27;)</span><br></pre></td></tr></table></figure></li><li>js批量添加写法（引入顺序需要在wow_init.js之前，而且需要pjax重载，每页重新添加一遍class）。通过在页面按<kbd>F12</kbd>,使用控制台右上角的元素选择器找到对应元素并获取class类名。<br>修改<code>[Blogroot]\themes\butterfly\source\js\wow_init.js</code>，在原有内容之前添加内容：<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 给首页文章卡片套上动画</span></span><br><span class="line"><span class="keyword">var</span> arr = <span class="built_in">document</span>.getElementsByClassName(<span class="string">&quot;recent-post-item&quot;</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i&lt;arr.length;i++)&#123;</span><br><span class="line">    arr[i].classList.add(<span class="string">&quot;wow&quot;</span>); <span class="comment">//必要项，添加wow.js标记</span></span><br><span class="line">    arr[i].classList.add(<span class="string">&quot;animate__zoomIn&quot;</span>); <span class="comment">//必要项，添加样式动画</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="comment">// 给侧栏卡片套上动画</span></span><br><span class="line"><span class="keyword">var</span> arr = <span class="built_in">document</span>.getElementsByClassName(<span class="string">&quot;card-widget&quot;</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i&lt;arr.length;i++)&#123;</span><br><span class="line">    arr[i].classList.add(<span class="string">&quot;wow&quot;</span>);</span><br><span class="line">    arr[i].classList.add(<span class="string">&quot;animate__slideInRight&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="comment">//初始化函数</span></span><br><span class="line">wow = <span class="keyword">new</span> WOW(&#123;</span><br><span class="line">  boxClass: <span class="string">&#x27;wow&#x27;</span>,</span><br><span class="line">  <span class="comment">// 当用户滚动时显示隐藏框的类名称</span></span><br><span class="line">  animateClass: <span class="string">&#x27;animate__animated&#x27;</span>,</span><br><span class="line">  <span class="comment">// 触发 CSS 动画的类名称（动画库默认为&quot;animate.css&quot;库）</span></span><br><span class="line">  offset: <span class="number">0</span>,</span><br><span class="line">  <span class="comment">// 定义浏览器视口底部与隐藏框顶部之间的距离。</span></span><br><span class="line">  <span class="comment">// 当用户滚动并到达此距离时，将显示隐藏的框。</span></span><br><span class="line">  mobile: <span class="literal">true</span>,</span><br><span class="line">  <span class="comment">// 在移动设备上打开/关闭wow.js。</span></span><br><span class="line">  live: <span class="literal">true</span></span><br><span class="line">  <span class="comment">// 在页面上检查新的 wow.js元素。</span></span><br><span class="line">&#125;)</span><br><span class="line">wow.init();</span><br></pre></td></tr></table></figure></li></ul></li><li>运行<code>hexo cl &amp;&amp; hexo g</code>之后即可看到效果。更多动画样式可以查看<a href="https://animate.style/">animate.css参考文档</a>。</li></ol>              </div>            </details><h1 id="插件化配置方案"><a href="#插件化配置方案" class="headerlink" title="插件化配置方案"></a>插件化配置方案</h1><details purple open><summary> 点击查看插件化配置方案 </summary>              <div class='content'>              <p><div class="tip cogs"><p>插件化配置方案是基于<code>Butterfly_v3.4.1</code>编写的，低版本可能有些许不适用，可以考虑使用基础引入方案或者升级主题。或者自己理解后重构配置。</p></div></p><ol><li>新建<code>[Blogroot]\themes\butterfly\source\js\wow_init.js</code>,配置默认值。<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">wow = <span class="keyword">new</span> WOW(&#123;</span><br><span class="line">  boxClass: <span class="string">&#x27;wow&#x27;</span>,</span><br><span class="line">  <span class="comment">// 当用户滚动时显示隐藏框的类名称</span></span><br><span class="line">  animateClass: <span class="string">&#x27;animate__animated&#x27;</span>,</span><br><span class="line">  <span class="comment">// 触发 CSS 动画的类名称（动画库默认为&quot;animate.css&quot;库）</span></span><br><span class="line">  offset: <span class="number">0</span>,</span><br><span class="line">  <span class="comment">// 定义浏览器视口底部与隐藏框顶部之间的距离。</span></span><br><span class="line">  <span class="comment">// 当用户滚动并到达此距离时，将显示隐藏的框。</span></span><br><span class="line">  mobile: <span class="literal">false</span>,</span><br><span class="line">  <span class="comment">// 在移动设备上打开/关闭wow.js。</span></span><br><span class="line">  <span class="comment">// 经测试此项配置无效。</span></span><br><span class="line">  live: <span class="literal">true</span></span><br><span class="line">  <span class="comment">// 在页面上检查新的 wow.js元素。</span></span><br><span class="line">&#125;)</span><br><span class="line">wow.init();</span><br></pre></td></tr></table></figure></li><li>新建<code>[Blogroot]\themes\butterfly\layout\includes\third-party\wowjs.pug</code>,<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.pjax-reload</span><br><span class="line">  if theme.wowjs.animateitem</span><br><span class="line">    each item in theme.wowjs.animateitem</span><br><span class="line">      script(async).</span><br><span class="line">        var arr &#x3D; document.getElementsByClassName(&#39;!&#123;item.class&#125;&#39;);</span><br><span class="line">        for(var i &#x3D; 0;i&lt;arr.length;i++)&#123;</span><br><span class="line">            arr[i].classList.add(&#39;wow&#39;);</span><br><span class="line">            arr[i].classList.add(&#39;!&#123;item.style&#125;&#39;);</span><br><span class="line">            arr[i].setAttribute(&#39;data-wow-duration&#39;, &#39;!&#123;item.duration&#125;&#39;);</span><br><span class="line">            arr[i].setAttribute(&#39;data-wow-delay&#39;, &#39;!&#123;item.delay&#125;&#39;);</span><br><span class="line">            arr[i].setAttribute(&#39;data-wow-offset&#39;, &#39;!&#123;item.offset&#125;&#39;);</span><br><span class="line">            arr[i].setAttribute(&#39;data-wow-iteration&#39;, &#39;!&#123;item.iteration&#125;&#39;);</span><br><span class="line">          &#125;</span><br><span class="line">script(defer src&#x3D;url_for(theme.CDN.wowjs))</span><br><span class="line">script(defer src&#x3D;url_for(theme.CDN.wowjs_init))</span><br></pre></td></tr></table></figure></li><li>修改<code>[Blogroot]\themes\butterfly\layout\includes\head.pug</code>的内容。<figure class="highlight diff"><table><tr><td class="code"><pre><span class="line">    //- font</span><br><span class="line">    if theme.blog_title_font &amp;&amp;　theme.blog_title_font.font_link</span><br><span class="line">      link(rel=&#x27;stylesheet&#x27; href=url_for(theme.blog_title_font.font_link) media=&quot;print&quot; onload=&quot;this.media=&#x27;all&#x27;&quot;)</span><br><span class="line"><span class="addition">+   //- animate_css</span></span><br><span class="line"><span class="addition">+   if theme.wowjs.enable   </span></span><br><span class="line"><span class="addition">+     link(rel=&#x27;stylesheet&#x27; href=url_for(theme.CDN.animate_css) media=&quot;print&quot; onload=&quot;this.media=&#x27;all&#x27;&quot;)</span></span><br><span class="line">    //- global config</span><br><span class="line">    !=partial(&#x27;includes/head/config&#x27;, &#123;&#125;, &#123;cache:theme.fragment_cache&#125;)</span><br></pre></td></tr></table></figure></li><li>修改<code>[Blogroot]\themes\butterfly\layout\includes\additional-js.pug</code>的内容。<figure class="highlight diff"><table><tr><td class="code"><pre><span class="line">    if theme.pjax.enable</span><br><span class="line">      !=partial(&#x27;includes/third-party/pjax&#x27;, &#123;&#125;, &#123;cache:theme.fragment_cache&#125;)</span><br><span class="line"></span><br><span class="line">    !=partial(&#x27;includes/third-party/baidu_push&#x27;, &#123;&#125;, &#123;cache:theme.fragment_cache&#125;)</span><br><span class="line"></span><br><span class="line"><span class="addition">+   if theme.wowjs.enable</span></span><br><span class="line"><span class="addition">+     !=partial(&#x27;includes/third-party/wowjs&#x27;, &#123;&#125;, &#123;cache:theme.fragment_cache&#125;)</span></span><br></pre></td></tr></table></figure></li><li>修改<code>[Blogroot]\themes\butterfly\layout\includes\third-party\pjax.pug</code>的内容。<div class="tabs" id="pjax-reload"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#pjax-reload-1">Butterfly_v3.0.0-3.3.0</button></li><li class="tab active"><button type="button" data-href="#pjax-reload-2">Butterfly_v3.4.0+</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="pjax-reload-1"><p>  <div class="tip warning"><p>原则上不推荐再用低于v3.4.0的版本，新版方案已经实现去jquery化，而此处的pjax适配仍然是需要jquery的。</p></div><br>  <figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"><span class="deletion">-   $(&#x27;script[data-pjax]&#x27;).each(function () &#123;</span></span><br><span class="line"><span class="addition">+   $(&#x27;script[data-pjax], .pjax-reload script&#x27;).each(function () &#123;</span></span><br><span class="line">      $(this).parent().append($(this).remove())</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="pjax-reload-2"><figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"><span class="deletion">-   document.querySelectorAll(&#x27;script[data-pjax]&#x27;).forEach(item =&gt; &#123;</span></span><br><span class="line"><span class="addition">+   document.querySelectorAll(&#x27;script[data-pjax], .pjax-reload script&#x27;).forEach(item =&gt; &#123;</span></span><br><span class="line">      const newScript = document.createElement(&#x27;script&#x27;)</span><br><span class="line">      const content = item.text || item.textContent || item.innerHTML || &quot;&quot;</span><br><span class="line">      Array.from(item.attributes).forEach(attr =&gt; newScript.setAttribute(attr.name, attr.value))</span><br><span class="line">      newScript.appendChild(document.createTextNode(content))</span><br><span class="line">      item.parentNode.replaceChild(newScript, item)</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div></li><li>修改<code>[Blogroot]\_config.butterfly.yml</code>,添加CDN配置项<figure class="highlight diff"><table><tr><td class="code"><pre><span class="line">    CDN:</span><br><span class="line">      # main</span><br><span class="line">      main_css: https://cdn.jsdelivr.net/gh/Akilarlxh/Akilarlxh.github.io/css/index.css</span><br><span class="line">      jquery: https://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js</span><br><span class="line">      main: https://cdn.jsdelivr.net/gh/Akilarlxh/Akilarlxh.github.io@bf_3.4.1_2/js/main.js</span><br><span class="line">      utils: https://cdn.jsdelivr.net/gh/Akilarlxh/Akilarlxh.github.io@bf_3.4.1_2/js/utils.js</span><br><span class="line"><span class="addition">+     wowjs: https://cdn.jsdelivr.net/gh/graingert/wow@1.3.0/dist/wow.min.js</span></span><br><span class="line"><span class="addition">+     wowjs_init: /js/wow_init.js # 之后可以自己换成CDN链接</span></span><br><span class="line"><span class="addition">+     animate_css: https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css</span></span><br></pre></td></tr></table></figure></li><li>修改<code>[Blogroot]\_config.butterfly.yml</code>,添加wowjs开关配置项,其中class和style是必填项，其余四个是选填项。此处提供首页文章卡片和侧栏卡片添加动画的示例。<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">wowjs:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment">#控制动画开关。true是打开，false是关闭</span></span><br><span class="line">  <span class="attr">animateitem:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">class:</span> <span class="string">recent-post-item</span> <span class="comment">#必填项，需要添加动画的元素的class</span></span><br><span class="line">      <span class="attr">style:</span> <span class="string">animate__zoomIn</span> <span class="comment">#必填项，需要添加的动画</span></span><br><span class="line">      <span class="attr">duration:</span> <span class="string">2s</span> <span class="comment">#选填项，动画持续时间，单位可以是ms也可以是s。例如3s，700ms。</span></span><br><span class="line">      <span class="attr">delay:</span> <span class="string">1s</span> <span class="comment">#选填项，动画开始的延迟时间，单位可以是ms也可以是s。例如3s，700ms。</span></span><br><span class="line">      <span class="attr">offset:</span> <span class="number">100</span> <span class="comment">#选填项，开始动画的距离（相对浏览器底部）</span></span><br><span class="line">      <span class="attr">iteration:</span> <span class="number">2</span> <span class="comment">#选填项，动画重复的次数</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">class:</span> <span class="string">card-widget</span></span><br><span class="line">      <span class="attr">style:</span> <span class="string">animate__zoomIn</span></span><br></pre></td></tr></table></figure></li><li>运行<code>hexo cl &amp;&amp; hexo g</code>之后即可看到效果。更多动画样式可以查看<a href="https://animate.style/">animate.css参考文档</a>。</li></ol>              </div>            </details><h1 id="外挂标签写法配置方案"><a href="#外挂标签写法配置方案" class="headerlink" title="外挂标签写法配置方案"></a>外挂标签写法配置方案</h1><details cyan><summary> 点击查看外挂标签写法配置教程 </summary>              <div class='content'>              <ol><li>外挂标签写法生效的前提是完成了上面的基础引入方案或者插件引入方案（二选一即可）。</li><li>新建<code>[Blogroot]\themes\butterfly\scripts\tag\wowanimate.js</code>:<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#39;use strict&#39;</span><br><span class="line"></span><br><span class="line">function wow (args, content) &#123;</span><br><span class="line">  args &#x3D; args.join(&#39; &#39;).split(&#39;,&#39;)</span><br><span class="line">  let p0 &#x3D; args[0]?args[0].trim():&#39;&#39;</span><br><span class="line">  let p1 &#x3D; args[1]?args[1].trim():&#39;&#39;</span><br><span class="line">  let p2 &#x3D; args[2]?args[2].trim():&#39;&#39;</span><br><span class="line">  let p3 &#x3D; args[3]?args[3].trim():&#39;&#39;</span><br><span class="line">  let p4 &#x3D; args[4]?args[4].trim():&#39;&#39;</span><br><span class="line">  return &#96;&lt;div class&#x3D;&#39;wow $&#123;p0&#125;&#39; data-wow-duration&#x3D;&#39;$&#123;p1&#125;&#39; data-wow-delay&#x3D;&#39;$&#123;p2&#125;&#39; data-wow-offset&#x3D;&#39;$&#123;p3&#125;&#39;  data-wow-iteration&#x3D;&#39;$&#123;p4&#125;&#39; &gt;$&#123;hexo.render.renderSync(&#123; text: content, engine: &#39;markdown&#39; &#125;)&#125;&lt;&#x2F;div&gt;&#96;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">hexo.extend.tag.register(&#39;wow&#39;,wow,&#123; ends: true &#125;);</span><br></pre></td></tr></table></figure></li><li>使用方式<div class="tabs" id="animate"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#animate-1">标签语法</button></li><li class="tab"><button type="button" data-href="#animate-2">参数配置</button></li><li class="tab active"><button type="button" data-href="#animate-3">样式预览</button></li><li class="tab"><button type="button" data-href="#animate-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="animate-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% wow [animete],[duration],[delay],[offset],[iteration] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="animate-2"><ol><li><code>animate</code>: 动画样式，效果详见<a href="https://animate.style/">animate.css参考文档</a></li><li><code>duration</code>: 选填项，动画持续时间，单位可以是<code>ms</code>也可以是<code>s</code>。例如<code>3s</code>，<code>700ms</code>。</li><li><code>delay</code>: 选填项，动画开始的延迟时间，单位可以是<code>ms</code>也可以是<code>s</code>。例如<code>3s</code>，<code>700ms</code>。</li><li><code>offset</code>: 选填项，开始动画的距离（相对浏览器底部）</li><li><code>iteration</code>: 选填项，动画重复的次数</li></ol><div class="note warning flat"><p>注意，后面四个虽然是选填项，但是当有跨位选填时，次序不能乱。详见示例。<br>支持嵌套其他外挂标签。</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="animate-3"><ol><li><code>flip</code>动画效果。<div class='wow animate__flip' data-wow-duration='' data-wow-delay='' data-wow-offset=''  data-wow-iteration='' >  <div class="note green icon modern"><i class="note-icon fas fa-fan"></i><p><code>flip</code>动画效果。</p></div></div></li><li><code>zoomIn</code>动画效果，持续<code>5s</code>，延时<code>5s</code>，离底部<code>100</code>距离时启动，重复<code>10</code>次。<div class='wow animate__zoomIn' data-wow-duration='5s' data-wow-delay='5s' data-wow-offset='100'  data-wow-iteration='10' >  <div class="note blue icon modern"><i class="note-icon fas fa-bullhorn"></i><p><code>zoomIn</code>动画效果，持续<code>5s</code>，延时<code>5s</code>，离底部<code>100</code>距离时启动，重复<code>10</code>次</p></div></div></li><li><code>slideInRight</code>动画效果，持续<code>5s</code>，延时<code>5s</code>。<div class='wow animate__slideInRight' data-wow-duration='5s' data-wow-delay='5s' data-wow-offset=''  data-wow-iteration='' >  <div class="note orange icon modern"><i class="note-icon fas fa-car"></i><p><code>slideInRight</code>动画效果，持续<code>5s</code>，延时<code>5s</code>。</p></div></div></li><li><code>heartBeat</code>动画效果，延时<code>5s</code>，重复<code>10</code>次。<div class='wow animate__heartBeat' data-wow-duration='' data-wow-delay='5s' data-wow-offset=''  data-wow-iteration='10' >  <div class="note red icon modern"><i class="note-icon fas fa-battery-half"></i><p><code>heartBeat</code>动画效果，延时<code>5s</code>，重复<code>10</code>次。</p></div></div></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="animate-4"><ol><li><code>flip</code>动画效果。<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__flip %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note green &#x27;fas fa-fan&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`flip`动画效果。</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure></li><li><code>zoomIn</code>动画效果，持续<code>5s</code>，延时<code>5s</code>，离底部<code>100</code>距离时启动，重复<code>10</code>次。<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__zoomIn,5s,5s,100,10 %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note blue &#x27;fas fa-bullhorn&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`zoomIn`动画效果，持续`5s`，延时`5s`，离底部`100`距离时启动，重复`10`次</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure></li><li><code>slideInRight</code>动画效果，持续<code>5s</code>，延时<code>5s</code>。<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__slideInRight,5s,5s %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note orange &#x27;fas fa-car&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`slideInRight`动画效果，持续`5s`，延时`5s`。</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure></li><li><code>heartBeat</code>动画效果，延时<code>5s</code>，重复<code>10</code>次。此处注意不用的参数位置要留空，用逗号间隔。<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__heartBeat,,5s,,10 %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note red &#x27;fas fa-battery-half&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`heartBeat`动画效果，延时`5s`，重复`10`次。</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div></li></ol>              </div>            </details><h1 id="TO-DO"><a href="#TO-DO" class="headerlink" title="TO DO"></a>TO DO</h1><div class='checkbox blue checked'><input type="checkbox" checked="checked"/>            <p>提供wowjs引入基本方案</p>            </div><div class='checkbox blue checked'><input type="checkbox" checked="checked"/>            <p>将配置内容整合进配置文件</p>            </div><div class='checkbox blue checked'><input type="checkbox" checked="checked"/>            <p>添加异步加载和pjax适配</p>            </div><div class='checkbox blue checked'><input type="checkbox" checked="checked"/>            <p>编写外挂标签</p>            </div><div class='checkbox times red checked'><input type="checkbox" checked="checked"/>            <p>将wowjs开关整合进front-matter的控制项(废弃，与pjax冲突过大)</p>            </div><h1 id="BUG反馈归纳"><a href="#BUG反馈归纳" class="headerlink" title="BUG反馈归纳"></a>BUG反馈归纳</h1><ol><li>如果使用了gulp-babel，在压缩js时可能报错：<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wow_init.js:1 Uncaught ReferenceError: wow is not defined</span><br></pre></td></tr></table></figure>修改<code>[Blogroot]\gulpfile.js</code>,添加一行屏蔽项，不要压缩<code>wow_init.js</code><figure class="highlight diff"><table><tr><td class="code"><pre><span class="line">    //minify js babel</span><br><span class="line">    gulp.task(&#x27;compress&#x27;, () =&gt;</span><br><span class="line"><span class="deletion">-     gulp.src([&#x27;./public/**/*.js&#x27;, &#x27;!./public/**/*.min.js&#x27;])</span></span><br><span class="line"><span class="addition">+     gulp.src([&#x27;./public/**/*.js&#x27;, &#x27;!./public/**/*.min.js&#x27;,&#x27;!./public/js/wow_init.js&#x27;])</span></span><br><span class="line">    .pipe(babel(&#123;</span><br><span class="line">    presets: [&#x27;@babel/preset-env&#x27;]</span><br></pre></td></tr></table></figure></li><li>在wowjs初始化设置中设置了mobile为false，但是手机依然生效。<br>推测是因为wowjs原本是基于animate.css_v3.0编写的，但是本帖沿用的是4.0。<del>好吧，经测试，3.0也不生效</del><br>解决方案是自主添加媒体选择。在css异步加载的适配中将<code>onload=&quot;this.media=&#39;all&#39;&quot;</code> 改为<code>onload=&quot;this.media=&#39;screen&#39;&quot;</code>,这样，样式就只会对电脑设备（或等宽度的设备）生效了。</li></ol>]]></content>
    
    
    <summary type="html">基于wowjs和animate.css给博客添加动画样式。</summary>
    
    
    
    <category term="🍡Akilarの糖葫芦" scheme="https://akilar.top/categories/%F0%9F%8D%A1Akilar%E3%81%AE%E7%B3%96%E8%91%AB%E8%8A%A6/"/>
    
    
    <category term="📁Hexo" scheme="https://akilar.top/tags/%F0%9F%93%81Hexo/"/>
    
    <category term="🦋Butterfly" scheme="https://akilar.top/tags/%F0%9F%A6%8BButterfly/"/>
    
  </entry>
  
</feed>
